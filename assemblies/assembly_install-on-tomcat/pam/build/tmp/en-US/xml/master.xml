<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE book [
<!ENTITY % BOOK_ENTITIES SYSTEM "master.ent">
%BOOK_ENTITIES;
<!ENTITY % sgml.features "IGNORE">
<!ENTITY % xml.features "INCLUDE">
<!ENTITY % DOCBOOK_ENTS PUBLIC "-//OASIS//ENTITIES DocBook Character Entities V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/dbcentx.mod">
%DOCBOOK_ENTS;
]>
<book version="5.0" xml:lang="en-US" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
	<?asciidoc-toc ?><?asciidoc-numbered ?>
	<info>
		<title>Installing and configuring Red Hat Process Automation Manager on Apache Tomcat</title>
		<subtitle></subtitle>
		 <date>2019-06-25</date>
		<xi:include href="Author_Group.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
		<authorinitials>RC</authorinitials><productname>Red Hat Process Automation Manager</productname>
		<productnumber>7.4</productnumber>
		<abstract>
			<para>
				This document describes how to install Red Hat Process Automation Manager 7.4 on Apache Tomcat 9.0.
			</para>
		</abstract>
		<xi:include href="Common_Content/Legal_Notice.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
	</info>
	<preface>
		<title>Preface</title>
		<simpara>
			This document describes how to install Red Hat Process Automation Manager 7.4 on Apache Tomcat 9.0.
		</simpara>
		<itemizedlist>
			<title>Prerequisites</title>
			<listitem>
				<simpara>
					You have reviewed the information in <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.4/html-single/planning_a_red_hat_process_automation_manager_installation"><emphasis>Planning a Red Hat Process Automation Manager installation</emphasis></link>.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					You have installed Apache Tomcat 9.0. For information about installing Apache Tomcat, see the <link xlink:href="http://tomcat.apache.org/">Apache Tomcat website</link>.
				</simpara>
			</listitem>
		</itemizedlist>
	</preface>
	<chapter xml:id="installing-con_install-on-tomcat">
		<title>About Red Hat Process Automation Manager</title>
		<simpara>
			Red Hat Process Automation Manager is the Red Hat middleware platform for creating business automation applications and microservices. It enables enterprise business and IT users to document, simulate, manage, automate, and monitor business processes and policies. It is designed to empower business and IT users to collaborate more effectively, so business applications can be changed easily and quickly.
		</simpara>
		<simpara>
			Apache Tomcat is an enterprise ready web server designed for medium and large applications. Apache Tomcat provides organizations with a single deployment platform for Java Server Pages (JSP) and Java Servlet technologies, PHP, and CGI.
		</simpara>
		<simpara>
			On an Apache Tomcat installation, you can install Process Server and the headless Process Automation Manager controller. Alternatively, you can run the standalone Business Central JAR file.
		</simpara>
		<simpara>
			The instructions in this document explain how to install Red Hat Process Automation Manager in an Apache Tomcat instance.
		</simpara>
		<simpara>
			For instruction on how to install Red Hat Process Automation Manager in other environments, see the following documents:
		</simpara>
		<itemizedlist>
			<listitem>
				<simpara>
					<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.4/html-single/installing_and_configuring_red_hat_process_automation_manager_on_red_hat_jboss_eap_7.2"><emphasis>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss EAP 7.2</emphasis></link>
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.4/html-single/installing_and_configuring_red_hat_process_automation_manager_on_red_hat_jboss_web_server"><emphasis>Installing and configuring Red Hat Process Automation Manager on Red Hat JBoss Web Server</emphasis></link>
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.4/html-single/installing_and_configuring_process_server_on_ibm_websphere_application_server"><emphasis>Installing and configuring Process Server on IBM WebSphere Application Server</emphasis></link>
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.4/html-single/installing_and_configuring_process_server_on_oracle_weblogic_server"><emphasis>Installing and configuring Process Server on Oracle WebLogic Server</emphasis></link>
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.4/html-single/deploying_a_red_hat_process_automation_manager_immutable_server_environment_on_red_hat_openshift_container_platform"><emphasis>Deploying a Red Hat Process Automation Manager immutable server environment on Red Hat OpenShift Container Platform</emphasis></link>
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.4/html-single/deploying_a_red_hat_process_automation_manager_authoring_environment_on_red_hat_openshift_container_platform"><emphasis>Deploying a Red Hat Process Automation Manager authoring environment on Red Hat OpenShift Container Platform</emphasis></link>
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.4/html-single/deploying_a_red_hat_process_automation_manager_managed_freeform_server_environment_on_red_hat_openshift_container_platform"><emphasis>Deploying a Red Hat Process Automation Manager freeform managed server environment on Red Hat OpenShift Container Platform</emphasis></link>
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.4/html-single/deploying_a_red_hat_process_automation_manager_environment_on_red_hat_openshift_container_platform_using_automation_broker"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using Automation Broke</emphasis></link>
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					<link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.4/html-single/deploying_a_red_hat_process_automation_manager_environment_on_red_hat_openshift_container_platform_using_operators"><emphasis>Deploying a Red Hat Process Automation Manager environment on Red Hat OpenShift Container Platform using Operators</emphasis></link>
				</simpara>
			</listitem>
		</itemizedlist>
		<simpara>
			For information about supported components, see the following documents:
		</simpara>
		<itemizedlist>
			<listitem>
				<simpara>
					<link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link>
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					<link xlink:href="https://access.redhat.com/articles/3405381">Red Hat Process Automation Manager 7 Supported Configurations</link>
				</simpara>
			</listitem>
		</itemizedlist>
		<section xml:id="components-con">
			<title>Red Hat Process Automation Manager components</title>
			<simpara>
				Red Hat Process Automation Manager is made up of Business Central and Process Server.
			</simpara>
			<itemizedlist>
				<listitem>
					<simpara>
						Business Central is the graphical user interface where you create and manage business rules. You can install Business Central in a Red Hat JBoss EAP instance or on the Red Hat OpenShift Container Platform (OpenShift).
					</simpara>
					<simpara>
						Business Central is also available as a standalone JAR file. You can use the Business Central standalone JAR file to run Business Central without needing to deploy it to an application server.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Process Server is the server where rules and other artifacts are executed. It is used to instantiate and execute rules and solve planning problems. You can install Process Server in a Red Hat JBoss EAP instance, on OpenShift, in an Oracle WebLogic server instance, in an IBM WebSphere Application Server instance, or as a part of Spring Boot application.
					</simpara>
					<simpara>
						You can configure Process Server to run in managed or unmanaged mode. If Process Server is unmanaged, you must manually create and maintain KIE containers (deployment units). A KIE container is a specific version of a project. If Process Server is managed, the Process Automation Manager controller manages the Process Server configuration and you interact with the Process Automation Manager controller to create and maintain KIE containers.
					</simpara>
				</listitem>
			</itemizedlist>
		</section>
		<section xml:id="roles-users-con">
			<title>Roles and users</title>
			<simpara>
				To access Business Central or Process Server, you must create users and assign them appropriate roles before the servers are started. This section describes available Red Hat Process Automation Manager user roles.
			</simpara>
			<note>
				<simpara>
					The <literal>admin</literal>, <literal>analyst</literal>, <literal>developer</literal>, <literal>manager</literal>, <literal>process-admin</literal>, <literal>user</literal>, and <literal>rest-all</literal> roles are reserved for Business Central. The <literal>kie-server</literal> role is reserved for Process Server. For this reason, the available roles can differ depending on whether Business Central, Process Server, or both are installed.
				</simpara>
			</note>
			<itemizedlist>
				<listitem>
					<simpara>
						<literal>admin</literal>: Users with the <literal>admin</literal> role are the Business Central administrators. They can manage users and create, clone, and manage the repositories. They have full access to make required changes in the application. Users with the <literal>admin</literal> role have access to all areas within Red Hat Process Automation Manager.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>analyst</literal>: Users with the <literal>analyst</literal> role have access to all high-level features. They can model and execute their projects. However, these users cannot add contributors to spaces or delete spaces in the <emphasis role="strong">Design → Projects</emphasis> view. Access to the <emphasis role="strong">Deploy → Execution Servers</emphasis> view, which is intended for administrators, is not available to users with the <literal>analyst</literal> role. However, the <emphasis role="strong">Deploy</emphasis> button is available to these users when they access the Library perspective.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>developer</literal>: Users with the <literal>developer</literal> role have access to almost all features and can manage rules, models, process flows, forms, and dashboards. They can manage the asset repository, they can create, build, and deploy projects, and they can use Red Hat JBoss Developer Studio to view processes. Only certain administrative functions such as creating and cloning a new repository are hidden from users with the <literal>developer</literal> role.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>manager</literal>: Users with the <literal>manager</literal> role can view reports. These users are usually interested in statistics about the business processes and their performance, business indicators, and other business-related reporting. A user with this role has access only to process and task reports.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>process-admin</literal>: Users with the <literal>process-admin</literal> role are business process administrators. They have full access to business processes, business tasks, and execution errors. These users can also view business reports and have access to the Task Inbox list.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>user</literal>: Users with the <literal>user</literal> role can work on the Task Inbox list, which contains business tasks that are part of currently running processes. Users with this role can view process and task reports and manage processes.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>rest-all</literal>: Users with the <literal>rest-all</literal> role can access Business Central REST capabilities.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>kie-server</literal>: Users with the <literal>kie-server</literal> role can access Process Server (KIE Server) REST capabilities. This role is mandatory for users to have access to Manage and Track views in Business Central.
					</simpara>
				</listitem>
			</itemizedlist>
		</section>
	</chapter>
	<chapter xml:id="install-download-proc_install-on-tomcat">
		<title>Downloading the Red Hat Process Automation Manager installation files</title>
		<simpara>
			Depending on your environment and installation requirements, download a Red Hat Process Automation Manager distribution.
		</simpara>
		<orderedlist numeration="arabic">
			<title>Procedure</title>
			<listitem>
				<simpara>
					Navigate to the <link xlink:href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html">Software Downloads</link> page in the Red Hat Customer Portal (login required), and select the product and version from the drop-down options:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							<emphasis role="strong">Product:</emphasis> Process Automation Manager
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							<emphasis role="strong">Version:</emphasis> 7.4
						</simpara>
					</listitem>
				</itemizedlist>
			</listitem>
			<listitem>
				<simpara>
					Download one of the following product distributions, depending on your preferred installation method:
				</simpara>
				<note>
					<simpara>
						You only need to download one of these distributions.
					</simpara>
				</note>
				<itemizedlist>
					<listitem>
						<simpara>
							If you want to use the installer to install Red Hat Process Automation Manager on download <emphasis role="strong">Red Hat Process Automation Manager 7.4.0 Installer</emphasis> (<literal>rhpam-installer-7.4.0.jar</literal>). The installer graphical user interface guides you through the installation process.
						</simpara>
					</listitem>
					<listitem>
						<simpara>
							To run Business Central without needing to deploy it to an application server, download <emphasis role="strong">Red Hat Process Automation Manager 7.4.0 Business Central Standalone</emphasis> (<literal>rhpam-7.4.0-business-central-standalone.jar</literal>).
						</simpara>
					</listitem>
				</itemizedlist>
			</listitem>
		</orderedlist>
	</chapter>
	<chapter xml:id="assembly_installing-using-installer_install-on-tomcat">
		<title>Using the Red Hat Process Automation Manager installer</title>
		<simpara>
			This section describes how to install Process Server and the headless Process Automation Manager controller using the installer JAR file. The JAR file is an executable file that installs Red Hat Process Automation Manager in an existing server installation. You can run the installer in interactive or command line interface (CLI) mode.
		</simpara>
		<formalpara>
			<title>Next steps:</title>
			<para>
				Follow the instructions in one of the following sections:
			</para>
		</formalpara>
		<itemizedlist>
			<listitem>
				<simpara>
					<xref linkend="installer-run-proc_install-on-tomcat" />
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					<xref linkend="installer-run-cli-proc_install-on-tomcat" />
				</simpara>
			</listitem>
		</itemizedlist>
		<section xml:id="installer-run-proc_install-on-tomcat">
			<title>Using the installer in interactive mode</title>
			<simpara>
				The installer for Red Hat Process Automation Manager is an executable JAR file. You can use it to install Red Hat Process Automation Manager in an existing server installation.
			</simpara>
			<note>
				<simpara>
					For security reasons, you should run the installer as a non-root user.
				</simpara>
			</note>
			<itemizedlist>
				<title>Prerequisites</title>
				<listitem>
					<simpara>
						A backed-up server installation is available.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Sufficient user permissions to complete the installation are granted.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						The JAR binary is included in <literal>$PATH</literal> environment variable. On Red Hat Enterprise Linux, it is included in the <literal>java-$<emphasis>JAVA_VERSION</emphasis>-openjdk-devel</literal> package.
					</simpara>
					<note>
						<simpara>
							Red Hat Process Automation Manager is designed to work with UTF-8 encoding. If a different encoding system is used by the underlying JVM, unexpected errors might occur. To ensure UTF-8 is used by the JVM, use the <literal>"-Dfile.encoding=UTF-8"</literal> system property.
						</simpara>
					</note>
				</listitem>
			</itemizedlist>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						In a terminal window, navigate to the directory where you downloaded the installer JAR file and enter the following command:
					</simpara>
					
<screen>java -jar rhpam-installer-7.4.0.jar</screen>
					<note>
						<simpara>
							When running the installer on Windows, you may be prompted to provide administrator credentials during the installation. To prevent this requirement, add the <literal>izpack.mode=privileged</literal> option to the installation command:
						</simpara>
						
<screen>java -Dizpack.mode=privileged -jar
rhpam-installer-7.4.0.jar</screen>
						<simpara>
							Furthermore, when running the installer on a 32-bit Java virtual machine, you might encounter memory limitations. To prevent this issue, run this command:
						</simpara>
						
<screen>java -XX:MaxHeapSize=4g -jar
rhpam-installer-7.4.0.jar</screen>
					</note>
					<simpara>
						The graphical installer displays a splash screen and a license agreement page.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">I accept the terms of this license agreement</emphasis> and click <emphasis role="strong">Next</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Specify the server home where you want to install Red Hat Process Automation Manager and click <emphasis role="strong">Next</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Select the components that you want to install and click <emphasis role="strong">Next</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Create a user and click <emphasis role="strong">Next</emphasis>. By default, the new user is given the <literal>admin</literal>, <literal>kie-server</literal>, and <literal>rest-all</literal> roles.
					</simpara>
					<note>
						<simpara>
							Make sure that the specified user name is not the same as an existing user, role, or group. For example, do not create a user with the user name <literal>admin</literal>.
						</simpara>
						<simpara>
							The password must have at least eight characters and must contain at least one number and one non-alphanumeric character, but not &amp; (ampersand).
						</simpara>
					</note>
					<simpara>
						Make a note of the user name and password. You will need them to access Business Central and Process Server.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						On the <emphasis role="strong">Installation Overview</emphasis> page, click <emphasis role="strong">Next</emphasis> to start the installation. The Installation Overview page lists the components that you will install.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						When the installation has completed, click <emphasis role="strong">Next</emphasis>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						On the <emphasis role="strong">Configure Runtime Environment</emphasis> page, choose whether to perform the default installation or perform an advanced configuration.
					</simpara>
					<simpara>
						If you choose <emphasis role="strong">Perform advanced configuration</emphasis>, you can choose to configure database settings or customize certain Process Server options.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						If you selected <emphasis role="strong">Customize database settings</emphasis>, on the <emphasis role="strong">JDBC Drive Configuration</emphasis> page specify a data source JDBC driver vendor, select one or more Driver JAR files, and click <emphasis role="strong">Next</emphasis>.
					</simpara>
					<simpara>
						A data source is an object that enables a Java Database Connectivity (JDBC) client, such as an application server, to establish a connection with a database. Applications look up the data source on the Java Naming and Directory Interface (JNDI) tree or in the local application context and request a database connection to retrieve data. You must configure data sources for Process Server to ensure proper data exchange between the servers and the designated database.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						If you selected <emphasis role="strong">Customize Process Server settings</emphasis>, change any of the following, if desired:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								Change the name of the Process Server property.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Change the URL of the headless Process Automation Manager controller.
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								Deselect any Process Server server options.
							</simpara>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<simpara>
						Click <emphasis role="strong">Next</emphasis> to configure the runtime environment.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						When <emphasis role="strong">Processing finished</emphasis> appears at the top of the screen, click <emphasis role="strong">Next</emphasis> to complete the installation.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						If desired, click <emphasis role="strong">Generate Installation Script and Properties File</emphasis> to save the installation data in an XML file, and then click <emphasis role="strong">Done</emphasis>. You can use this file to automatically install Red Hat Process Automation Manager on the same type of server. Note that you must change the <literal>installpath</literal> parameter in the XML file to specify the path of the new server that you want to install Red Hat Process Automation Manager on. Enter the following command to perform an installation with the XML file:
					</simpara>
					
<screen>java -jar rhpam-installer-7.4.0.jar &lt;path-to-file&gt;</screen>
				</listitem>
			</orderedlist>
			<simpara>
				You have successfully installed Red Hat Process Automation Manager using the installer. If you installed only Business Central, repeat these steps to install Process Server on a separate server.
			</simpara>
			<note>
				<simpara>
					If you use Microsoft SQL Server, make sure you have configured proper transaction isolation for your database. If you do not, you may experience deadlocks. The recommended configuration is to turn on ALLOW_SNAPSHOT_ISOLATION and READ_COMMITTED_SNAPSHOT by entering the following statements:
				</simpara>
				
<screen>ALTER DATABASE &lt;DBNAME&gt; SET ALLOW_SNAPSHOT_ISOLATION ON
ALTER DATABASE &lt;DBNAME&gt; SET READ_COMMITTED_SNAPSHOT ON</screen>
			</note>
		</section>
		<section xml:id="installer-run-cli-proc_install-on-tomcat">
			<title>Using the installer in CLI mode</title>
			<simpara>
				You can run the Red Hat Process Automation Manager installer through the command-line interface (CLI).
			</simpara>
			<note>
				<simpara>
					For security reasons, you should run the installer as a non-root user.
				</simpara>
			</note>
			<itemizedlist>
				<title>Prerequisites</title>
				<listitem>
					<simpara>
						A backed-up server installation is available.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Sufficient user permissions to complete the installation are granted.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						The JAR binary is included in the <literal>$PATH</literal> environment variable. On Red Hat Enterprise Linux, it is included in the <literal>java-$<emphasis>JAVA_VERSION</emphasis>-openjdk-devel</literal> package.
					</simpara>
					<note>
						<simpara>
							Red Hat Process Automation Manager is designed to work with UTF-8 encoding. If a different encoding system is used by the underlying JVM, unexpected errors might occur. To ensure UTF-8 is used by the JVM, use the <literal>"-Dfile.encoding=UTF-8"</literal> system property.
						</simpara>
					</note>
				</listitem>
			</itemizedlist>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						In a terminal window, navigate to the directory where you downloaded the installer file and enter the following command:
					</simpara>
					
<screen>java -jar rhpam-installer-7.4.0.jar -console</screen>
					<simpara>
						The command-line interactive process will start and display the End-User License Agreement.
					</simpara>
					
<screen>press 1 to continue, 2 to quit, 3 to redisplay.</screen>
				</listitem>
				<listitem>
					<simpara>
						Read the license agreement, enter <literal>1</literal>, and press Enter to continue:
					</simpara>
					
<screen>Specify the home directory of one of the following servers:  Red Hat JBoss EAP 7.2</screen>
				</listitem>
				<listitem>
					<simpara>
						Enter the parent directory of an existing installation.
					</simpara>
					<simpara>
						The installer will verify the location of the installation at the location provided. Enter <literal>1</literal> to confirm and continue.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Follow the instructions in the installer to complete the installation.
					</simpara>
					<note>
						<simpara>
							When you create the user name and password, make sure that the specified user name does not conflict with any known title of a role or a group. For example, if there is a role called <literal>admin</literal>, you should not create a user with the user name <literal>admin</literal>.
						</simpara>
						<simpara>
							The password must have at least eight characters and must contain at least one number and one non-alphanumeric character (<emphasis>not</emphasis> including the character <literal>&amp;</literal>).
						</simpara>
						<simpara>
							Make a note of the user name and password. You will need them to access Business Central and Process Server.
						</simpara>
					</note>
				</listitem>
				<listitem>
					<simpara>
						When the installation has completed, you will see this message:
					</simpara>
					
<screen>Would you like to generate an automatic installation script and properties file?</screen>
				</listitem>
				<listitem>
					<simpara>
						Enter <literal>y</literal> to create an XML file that contains the installation data, or <literal>n</literal> to complete the installation. If you enter <literal>y</literal>, you are prompted to specify a path for the XML file.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Enter a path or press the Enter key to accept the suggested path.
					</simpara>
				</listitem>
			</orderedlist>
			<note>
				<simpara>
					If you use Microsoft SQL Server, make sure you have configured proper transaction isolation for your database. If you do not, you may experience deadlocks. The recommended configuration is to turn on ALLOW_SNAPSHOT_ISOLATION and READ_COMMITTED_SNAPSHOT by entering the following statements:
				</simpara>
				
<screen>ALTER DATABASE &lt;DBNAME&gt; SET ALLOW_SNAPSHOT_ISOLATION ON
ALTER DATABASE &lt;DBNAME&gt; SET READ_COMMITTED_SNAPSHOT ON</screen>
			</note>
		</section>
	</chapter>
	<chapter remap="_process_server_zip_file_installation_and_configuration" xml:id="process_server_zip_file_installation_and_configuration">
		<title>Process Server ZIP file installation and configuration</title>
		<simpara>
			You can install Process Server using the <literal>rhpam-7.4-kie-server-jws.zip</literal> file and then configure the Java Database Connectivity (JDBC) web server data sources on Apache Tomcat .
		</simpara>
		<section xml:id="jws-zip-install-proc">
			<title>Installing Process Server from ZIP files</title>
			<simpara>
				Process Server provides the runtime environment for business assets and accesses the data stored in the assets repository (knowledge store). You can use ZIP files to install Process Server on an existing Apache Tomcat 9.0 instance.
			</simpara>
			<note>
				<simpara>
					To use the installer JAR file to install Process Server, see <xref linkend="assembly_installing-using-installer_install-on-tomcat" />.
				</simpara>
			</note>
			<itemizedlist>
				<listitem>
					<simpara>
						The following files have been downloaded, as described in <xref linkend="install-download-proc_install-on-tomcat" />:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								<emphasis role="strong">Red Hat Process Automation Manager 7.4.0 Add Ons</emphasis> (<literal>rhpam-7.4.0-add-ons.zip</literal>)
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<emphasis role="strong">Red Hat Process Automation Manager 7.4.0 Maven Repository</emphasis> (<literal>rhpam-7.4.0-maven-repository.zip</literal>)
							</simpara>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<simpara>
						A backed-up Apache Tomcat 9.0 server installation is available. The base directory of the Apache Tomcat installation is referred to as <literal><emphasis>TOMCAT_HOME</emphasis></literal>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Sufficient user permissions to complete the installation are granted.
					</simpara>
				</listitem>
			</itemizedlist>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						Unzip the <literal>rhpam-7.4.0-add-ons.zip</literal> file.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						From the unzipped <literal>rhpam-7.4.0-add-ons.zip</literal> file, extract the following files:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								<literal>rhpam-7.4-kie-server-jws.zip</literal>
							</simpara>
						</listitem>
						<listitem>
							<simpara>
								<literal>rhpam-7.4-process-engine.zip</literal>
							</simpara>
						</listitem>
					</itemizedlist>
					<simpara>
						In the following instructions, the directory that contains the extracted <literal>rhpam-7.4-kie-server-jws.zip</literal> file is called <literal>TOMCAT_TEMP_DIR</literal> and the directory that contains the extracted <literal>rhpam-7.4-process-engine.zip</literal> file is called <literal>ENGINE_TEMP_DIR</literal>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Copy the <literal>TOMCAT_TEMP_DIR/rhpam-7.4-kie-server-jws/kie-server.war</literal> directory to the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/webapps</literal> directory.
					</simpara>
					<note>
						<simpara>
							Ensure the names of the Red Hat Process Automation Manager deployments you are copying do not conflict with your existing deployments in the Apache Tomcat instance.
						</simpara>
					</note>
				</listitem>
				<listitem>
					<simpara>
						Remove the <literal>.war</literal> extensions from the <literal>kie-server.war</literal> folder.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Move the <literal>kie-tomcat-integration-7.23.0.Final-redhat-00002.jar</literal> file from the <literal>ENGINE_TEMP_DIR</literal> directory to the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/lib</literal> directory.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Move the <literal>jboss-jacc-api-&lt;VERSION&gt;.jar</literal>, <literal>slf4j-api-&lt;VERSION&gt;.jar</literal>, and <literal>slf4j-jdk14-&lt;VERSION&gt;.jar</literal> files from the <literal>ENGINE_TEMP_DIR/lib</literal> directory to the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/lib</literal> directory, where <literal>&lt;VERSION&gt;</literal> is the version artifact file name, in the <literal>lib</literal> directory.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Add the following line to the <literal>&lt;host&gt;</literal> element in the <literal><emphasis>TOMCAT_HOME</emphasis>/conf/server.xml</literal> file after the last Valve definition:
					</simpara>
					
<screen>&lt;Valve className="org.kie.integration.tomcat.JACCValve" /&gt;</screen>
				</listitem>
				<listitem>
					<simpara>
						Open the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/conf/tomcat-users.xml</literal> file in a text editor.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Add users and roles to the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/conf/tomcat-users.xml</literal> file. In the following example, <literal>&lt;ROLE_NAME&gt;</literal> is a role supported by Red Hat Process Automation Manager. <literal>&lt;USER_NAME&gt;</literal> and <literal>&lt;USER_PWD&gt;</literal> are the user name and password of your choice:
					</simpara>
					
<screen>&lt;role rolename="&lt;ROLE_NAME&gt;"/&gt;
&lt;user username="&lt;USER_NAME&gt;" password="&lt;USER_PWD&gt;" roles="&lt;ROLE_NAME&gt;"/&gt;</screen>
					<simpara>
						If a user has more than one role, as shown in the following example, separate the roles with a comma:
					</simpara>
					
<screen>&lt;role rolename="admin"/&gt;
&lt;role rolename="kie-server"/&gt;
&lt;user username="rhpamUser" password="user1234" roles="admin,kie-server"/&gt;</screen>
				</listitem>
				<listitem>
					<simpara>
						Complete one of the following steps in the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/bin</literal> directory:
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								On Linux or UNIX, create the <literal>setenv.sh</literal> file with the following content:
							</simpara>
							
<screen>CATALINA_OPTS="-Xmx1024m -Dorg.jboss.logging.provider=jdk"</screen>
						</listitem>
						<listitem>
							<simpara>
								On Windows, add the following content to the <literal>setenv.bat</literal> file:
							</simpara>
							
<screen>set CATALINA_OPTS=-Xmx1024m -Dorg.jboss.logging.provider=jdk</screen>
						</listitem>
					</itemizedlist>
				</listitem>
			</orderedlist>
			<note>
				<simpara>
					If you use Microsoft SQL Server, make sure you have configured proper transaction isolation for your database. If you do not, you may experience deadlocks. The recommended configuration is to turn on ALLOW_SNAPSHOT_ISOLATION and READ_COMMITTED_SNAPSHOT by entering the following statements:
				</simpara>
				
<screen>ALTER DATABASE &lt;DBNAME&gt; SET ALLOW_SNAPSHOT_ISOLATION ON
ALTER DATABASE &lt;DBNAME&gt; SET READ_COMMITTED_SNAPSHOT ON</screen>
			</note>
		</section>
		<section xml:id="jws-jdbc-config_install-on-tomcat">
			<title>Configuring JDBC Web Server data sources</title>
			<simpara>
				Java Database Connectivity (JDBC) is an API specification that is used to connect programs written in Java to the data in popular databases. A data source is an object that enables a JDBC client, such as an application server, to establish a connection with a database. Applications look up the data source on the Java Naming and Directory Interface (JNDI) tree or in the local application context and request a database connection to retrieve data. You must configure data sources for Process Server to ensure proper data exchange between the servers and the designated database.
			</simpara>
			<itemizedlist>
				<title>Prerequisites</title>
				<listitem>
					<simpara>
						Red Hat Process Automation Manager is installed on Apache Tomcat.
					</simpara>
				</listitem>
			</itemizedlist>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						Copy the following libraries from the offline Maven repository to the <literal>TOMCAT_HOME/tomcat/lib</literal> folder:
					</simpara>
					
<screen>org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec
org.jboss.integration:narayana-tomcat
org.jboss.narayana.jta:narayana-jta
org.jboss:jboss-transaction-spi</screen>
				</listitem>
				<listitem>
					<simpara>
						Copy your database JDBC driver to the <literal>TOMCAT_HOME/tomcat/lib</literal> folder.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Configure the pooling XA data source in the <literal>TOMCAT_HOME/tomcat/conf/context.xml</literal> file:
					</simpara>
					<note>
						<simpara>
							Some of the properties in the following examples might not apply to your database server. Check the documentation for your JDBC driver to determine which properties to set.
						</simpara>
					</note>
					<orderedlist numeration="loweralpha">
						<listitem>
							<simpara>
								Configure an XA data source without pooling capabilities. This XA data source is used to create new connections to the target database. In the following example, the XA datasourse is <literal>xads</literal> and the variables are defined in <xref linkend="xa_data_source_install-on-tomcat" />:
							</simpara>
							
<screen>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Context&gt;
&lt;Resource
auth="Container"
databaseName="${datasource.dbName}"
description="XA Data Source"
factory="org.apache.tomcat.jdbc.naming.GenericNamingResourcesFactory" loginTimeout="0"
name="xads"
uniqueName="xads"
portNumber="${datasource.port}"
serverName="${datasource.hostname}"
testOnBorrow="false"
type="${datasource.class}"
url="${datasource.url}"
URL="${datasource.url}"
user="${datasource.username}"
password="${datasource.password}"
driverType="4"
schema="${datasource.schema}"
/&gt;
&lt;/Context&gt;</screen>
							<table colsep="1" frame="all" rowsep="1" xml:id="xa_data_source_install-on-tomcat">
								<title>XA data source variables</title>
								<tgroup cols="2">
									<colspec colname="col_1" colwidth="40*"></colspec>
									<colspec colname="col_2" colwidth="60*"></colspec>
									<thead>
										<row>
											<entry align="left" valign="top">Variable</entry>
											<entry align="left" valign="top">Description</entry>
										</row>
									</thead>
									<tbody>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>&lt;datasource.dbName&gt;</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												The name of the database.
											</simpara>
											</entry>
										</row>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>&lt;datasource.port&gt;</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												The port number of the database.
											</simpara>
											</entry>
										</row>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>&lt;datasource.hostname&gt;</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												The name of the database host.
											</simpara>
											</entry>
										</row>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>&lt;datasource.class&gt;</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												<literal>XADataSource</literal> class of JDBC driver.
											</simpara>
											</entry>
										</row>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>&lt;datasource.url&gt;</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												The JDBC database connection URL. With some databases, the URL property is <literal>url</literal> and with other databases (for example H2 databases) this property is <literal>URL</literal>.
											</simpara>
											</entry>
										</row>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>&lt;datasource.username&gt;</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												User name for the database connection.
											</simpara>
											</entry>
										</row>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>&lt;datasource.password&gt;</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												Password for the database connection.
											</simpara>
											</entry>
										</row>
										<row>
											<entry align="left" valign="top">
											<simpara>
												<literal>&lt;datasource.schema&gt;</literal>
											</simpara>
											</entry>
											<entry align="left" valign="top">
											<simpara>
												The database schema.
											</simpara>
											</entry>
										</row>
									</tbody>
								</tgroup>
							</table>
						</listitem>
						<listitem>
							<simpara>
								Configure a pooling data source that relies on the XA data source for creating new connections. In this example, the data source is <literal>poolingXaDs</literal>, <literal>&lt;datasource.username&gt;</literal> is the user name for the database connection, and <literal>&lt;datasource.password&gt;</literal> is the password for the database connection:
							</simpara>
							
<screen>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;Context&gt;
&lt;Resource
name="poolingXaDs"
uniqueName="poolingXaDs"
auth="Container"
description="Pooling XA Data Source" factory="org.jboss.narayana.tomcat.jta.TransactionalDataSourceFactory" testOnBorrow="true"
transactionManager="TransactionManager" transactionSynchronizationRegistry="TransactionSynchronizationRegistry" type="javax.sql.XADataSource"
username="${datasource.username}"
password="${datasource.password}"
xaDataSource="xads"
/&gt;
&lt;/Context&gt;</screen>
							<simpara>
								The data source is now available under the <literal>java:comp/env/poolingXaDs</literal> JNDI name and passes it to the Process Server through the <literal>org.kie.server.persistence.ds</literal> system property as described in the next steps.
							</simpara>
							<note>
								<simpara>
									The pooling data source configuration relies on additional resource that have been previously configured in <literal>context.xml</literal> file in <literal>kie-server</literal> application, specifically <literal>TransactionManager</literal> and <literal>TransactionSynchronizationRegistry</literal>.
								</simpara>
							</note>
						</listitem>
					</orderedlist>
				</listitem>
				<listitem>
					<simpara>
						Configure Process Server to use the data source:
					</simpara>
					<orderedlist numeration="loweralpha">
						<listitem>
							<simpara>
								Open one of the following scripts in a text editor:
							</simpara>
							<itemizedlist>
								<listitem>
									<simpara>
										For Linux or Unix:
									</simpara>
									
<screen>TOMCAT_HOME/tomcat/bin/setenv.sh</screen>
								</listitem>
								<listitem>
									<simpara>
										For Windows:
									</simpara>
									
<screen>TOMCAT_HOME/tomcat/bin/setenv.bat</screen>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<simpara>
								Add the following properties to <literal>CATALINA_OPS</literal> where <literal>&lt;hibernate.dialect&gt;</literal> is the Hibernate dialect for your database:
							</simpara>
							
<screen>CATALINA_OPTS=”
-Dorg.kie.server.persistence.ds=java:comp/env/poolingXaDs
-Dorg.kie.server.persistence.tm=JBossTS
-Dorg.kie.server.persistence.dialect=${&lt;hibernate.dialect&gt;}”</screen>
							<simpara>
								The following dialects are supported:
							</simpara>
							<itemizedlist>
								<listitem>
									<simpara>
										DB2: <literal>org.hibernate.dialect.DB2Dialect</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										MSSQL: <literal>org.hibernate.dialect.SQLServer2012Dialect</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										MySQL: <literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										MariaDB: <literal>org.hibernate.dialect.MySQL5InnoDBDialect</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Oracle: <literal>org.hibernate.dialect.Oracle10gDialect</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										PostgreSQL: <literal>org.hibernate.dialect.PostgreSQL82Dialect</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										PostgreSQL plus: <literal>org.hibernate.dialect.PostgresPlusDialect</literal>
									</simpara>
								</listitem>
								<listitem>
									<simpara>
										Sybase: <literal>org.hibernate.dialect.SybaseASE157Dialect</literal>
									</simpara>
									<note>
										<simpara>
											The <literal>setenv.sh</literal> script should already exist. However, if it does not, create it.
										</simpara>
									</note>
								</listitem>
							</itemizedlist>
						</listitem>
					</orderedlist>
				</listitem>
			</orderedlist>
		</section>
	</chapter>
	<chapter xml:id="jws-kie-server-verify-proc">
		<title>Verifying the Process Server installation</title>
		<simpara>
			Verify that Process Server is installed correctly.
		</simpara>
		<itemizedlist>
			<title>Prerequisites</title>
			<listitem>
				<simpara>
					Process Server is installed and configured.
				</simpara>
			</listitem>
		</itemizedlist>
		<orderedlist numeration="arabic">
			<title>Procedure</title>
			<listitem>
				<simpara>
					To start Red Hat JBoss Web Server, enter one of the following commands in the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/bin</literal> directory:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							On Linux or UNIX-based systems:
						</simpara>
						
<programlisting language="bash" linenumbering="unnumbered">$ ./startup.sh</programlisting>
					</listitem>
					<listitem>
						<simpara>
							On Windows:
						</simpara>
						
<programlisting language="bash" linenumbering="unnumbered">startup.bat</programlisting>
					</listitem>
				</itemizedlist>
			</listitem>
			<listitem>
				<simpara>
					After a few minutes, review the files in the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/logs</literal> directory and correct any errors.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					To verify that Process Server is working on Red Hat JBoss Web Server, enter the following command:
				</simpara>
				
<screen>curl -X GET "http://localhost:8080/kie-server/services/rest/server" -H  "accept: application/xml" -u '&lt;USER_NAME&gt;:&lt;USER_PWD&gt;'</screen>
				<simpara>
					In this command, replace <literal>&lt;USER_NAME&gt;</literal> and <literal>&lt;USER_PWD&gt;</literal> with the values in the <literal>tomcat-users.xml</literal> file.
				</simpara>
				<simpara>
					The output of this command provides information about the Process Server instance.
				</simpara>
			</listitem>
		</orderedlist>
	</chapter>
	<chapter xml:id="controller-jws-install-proc">
		<title>Downloading and installing the headless Process Automation Manager controller</title>
		<simpara>
			You can configure Process Server to run in managed or unmanaged mode. If Process Server is unmanaged, you must manually create and maintain KIE containers (deployment units). If Process Server is managed, the Process Automation Manager controller manages the Process Server configuration and you interact with the Process Automation Manager controller to create and maintain KIE containers.
		</simpara>
		<simpara>
			The Process Automation Manager controller is integrated with Business Central. If you install Business Central, use the <emphasis role="strong">Execution Server</emphasis> page to create and maintain KIE containers. However, if you do not install Business Central, you can install the headless Process Automation Manager controller and use the REST API or the Process Server Java Client API to interact with it.
		</simpara>
		<itemizedlist>
			<title>Prerequisites</title>
			<listitem>
				<simpara>
					The <emphasis role="strong">Red Hat Process Automation Manager 7.4.0 Add Ons</emphasis> (<literal>rhpam-7.4.0-add-ons.zip</literal>) file has been downloaded, as described in <xref linkend="install-download-proc_install-on-tomcat" />.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					A Apache Tomcat 9.0 installation is available. The base directory of the Apache Tomcat installation is referred to as <literal><emphasis>TOMCAT_HOME</emphasis></literal>.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					Sufficient user permissions to complete the installation are granted.
				</simpara>
			</listitem>
		</itemizedlist>
		<orderedlist numeration="arabic">
			<title>Procedure</title>
			<listitem>
				<simpara>
					Unzip the <literal>rhpam-7.4.0-add-ons.zip</literal> file. The <literal>rhpam-7.4-controller-jws.zip</literal> file is in the unzipped directory.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					Extract the <literal>rhpam-7.4-controller-jws.zip</literal> archive to a temporary directory. In the following examples this directory is called <literal><emphasis>TEMP_DIR</emphasis></literal>.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					Copy the <literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.4-controller-jws.zip/controller.war</literal> directory to the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/webapps</literal> directory.
				</simpara>
				<note>
					<simpara>
						Ensure the names of the Red Hat Process Automation Manager deployments you are copying do not conflict with your existing deployments in the Apache Tomcat instance.
					</simpara>
				</note>
			</listitem>
			<listitem>
				<simpara>
					Remove the <literal>.war</literal> extensions from the <literal>controller.war</literal> folder.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					Copy the contents of the <literal><emphasis>TEMP_DIR</emphasis>/rhpam-7.4-controller-jws/SecurityPolicy/</literal> directory to <literal><emphasis>TOMCAT_HOME</emphasis>/bin</literal>
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					When asked to overwrite files, select <emphasis role="strong">Yes</emphasis>.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					Add the <literal>kie-server</literal> role and user to the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/conf/tomcat-users.xml</literal> file. In the following example, <literal>&lt;USERNAME&gt;</literal> and <literal>&lt;PASSWORD&gt;</literal> are the user name and password of your choice:
				</simpara>
				
<screen>&lt;role rolename="kie-server"/&gt;
&lt;user username="&lt;USER_NAME&gt;" password="&lt;PASSWORD&gt;" roles="kie-server"/&gt;</screen>
			</listitem>
			<listitem>
				<simpara>
					Complete one of the following tasks in the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/bin</literal> directory of the instance running Process Server:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							On Linux or UNIX, create the <literal>setenv.sh</literal> file with the following content:
						</simpara>
						
<screen>CATALINA_OPTS="-Xmx1024m -Dorg.jboss.logging.provider=jdk
 -Dorg.kie.server.controller.user=&lt;CONTROLLER_USER&gt;
 -Dorg.kie.server.controller.pwd=&lt;CONTROLLER_PWD&gt;
 -Dorg.kie.server.id=&lt;KIE_SERVER_ID&gt;
 -Dorg.kie.server.location=http://&lt;HOST&gt;:&lt;PORT&gt;/kie-server/services/rest/server
 -Dorg.kie.server.controller=http://&lt;HOST&gt;:&lt;PORT&gt;/controller/rest/controller"</screen>
					</listitem>
					<listitem>
						<simpara>
							On Windows, add the following content to the <literal>setenv.bat</literal> file:
						</simpara>
						
<screen>set CATALINA_OPTS=-Xmx1024m -Dorg.jboss.logging.provider=jdk
 -Dorg.kie.server.controller.user=&lt;CONTROLLER_USER&gt;
 -Dorg.kie.server.controller.pwd=&lt;CONTROLLER_PWD&gt;
 -Dorg.kie.server.id=&lt;KIE_SERVER_ID&gt;
 -Dorg.kie.server.location=http://&lt;HOST&gt;:&lt;PORT&gt;/kie-server/services/rest/server
 -Dorg.kie.server.controller=http://&lt;HOST&gt;:&lt;PORT&gt;/controller/rest/controller</screen>
					</listitem>
				</itemizedlist>
			</listitem>
			<listitem>
				<simpara>
					In the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/bin</literal> directory of the instance running the headless Process Automation Manager controller, create a readable <literal>setenv.sh</literal> file with the following content:
				</simpara>
				<simpara>
					<literal>CATALINA_OPTS="-Dorg.kie.server.user=&lt;USERNAME&gt; -Dorg.kie.server.pwd=&lt;USER_PWD&gt;"</literal>
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					To start the headless Process Automation Manager controller, enter one of the following commands in the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/bin</literal> directory:
				</simpara>
				<itemizedlist>
					<listitem>
						<simpara>
							On Linux or UNIX-based systems:
						</simpara>
						
<programlisting language="bash" linenumbering="unnumbered">$ ./startup.sh</programlisting>
					</listitem>
					<listitem>
						<simpara>
							On Windows:
						</simpara>
						
<programlisting language="bash" linenumbering="unnumbered">startup.bat</programlisting>
					</listitem>
				</itemizedlist>
			</listitem>
			<listitem>
				<simpara>
					After a few minutes, review the <literal><emphasis>TOMCAT_HOME</emphasis>/tomcat/logs</literal> directory and correct any errors.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					To verify that the headless Process Automation Manager controller is working on Red Hat JBoss Web Server, enter the following command. In this command, replace <literal>&lt;CONTROLLER&gt;</literal> and <literal>&lt;CONTROLLER_PWD&gt;</literal> with the values in the <literal>tomcat-users.xml</literal> file. The output of this command provides information about the Process Server instance.
				</simpara>
				
<screen>curl -X GET "http://&lt;HOST&gt;:&lt;PORT&gt;/controller/rest/controller/management/servers" -H  "accept: application/xml" -u '&lt;CONTROLLER&gt;:&lt;CONTROLLER_PWD&gt;'</screen>
			</listitem>
		</orderedlist>
		<note>
			<simpara>
				Alternatively, you can use the Process Server Java API Client to access the headless Process Automation Manager controller.
			</simpara>
		</note>
	</chapter>
	<chapter xml:id="run-dc-standalone-proc">
		<title>Running standalone Business Central</title>
		<simpara>
			You can use the Business Central standalone JAR file to run Business Central without needing to deploy it to an application server such as Red Hat JBoss EAP.
		</simpara>
		<note>
			<simpara>
				Red Hat supports this installation type only when it is installed on Red Hat Enterprise Linux.
			</simpara>
		</note>
		<itemizedlist>
			<title>Prerequisites</title>
			<listitem>
				<simpara>
					The <emphasis role="strong">Red Hat Process Automation Manager 7.4.0 Business Central Standalone</emphasis> (<literal>rhpam-7.4.0-business-central-standalone.jar</literal>) file has been downloaded, as described in <xref linkend="install-download-proc_install-on-tomcat" />.
				</simpara>
			</listitem>
		</itemizedlist>
		<orderedlist numeration="arabic">
			<title>Procedure</title>
			<listitem>
				<simpara>
					Create a directory and move the <literal>rhpam-7.4.0-business-central-standalone.jar</literal> file to this directory.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					In a terminal window, navigate to the directory that contains the standalone JAR file.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					Create the <literal>application-users.properties</literal> file. Include an administrative user and if this Business Central instance will be a Process Automation Manager controller for Process Server, include a Process Automation Manager controller user, for example:
				</simpara>
				
<screen>rhpamAdmin=password1
controllerUser=controllerUser1234</screen>
			</listitem>
			<listitem>
				<simpara>
					Create the <literal>application-roles.properties</literal> file to assign roles to the users that you included in the <literal>application-users.properties</literal> file, for example:
				</simpara>
				
<screen>rhpamAdmin=admin
controllerUser=kie-server</screen>
			</listitem>
			<listitem>
				<simpara>
					Create the <literal>application-config.yaml</literal> configuration file with the following contents, where <literal>&lt;APPLICATION_USERS&gt;</literal> is the path to the <literal>application-users.properties</literal> file and <literal>&lt;APPLICATION_ROLES&gt;</literal> is the path to the <literal>application-roles.properties</literal> file:
				</simpara>
				
<screen>thorntail:
  security:
    security-domains:
      other:
        classic-authentication:
          login-modules:
            myloginmodule:
              code: org.kie.security.jaas.KieLoginModule
              flag: optional
              module: deployment.business-central-webapp.war
  management:
    security-realms:
      ApplicationRealm:
        local-authentication:
          default-user: local
          allowed-users: local
          skip-group-loading: true
        properties-authentication:
          path: &lt;APPLICATION_USERS&gt;
          plain-text: true
        properties-authorization:
          path: &lt;APPLICATION_ROLES&gt;
datasource:
  management:
    wildfly:
      admin: admin</screen>
			</listitem>
			<listitem>
				<simpara>
					Enter the following command:
				</simpara>
				
<screen>java -jar rhpam-7.4.0-business-central-standalone.jar -s application-config.yaml</screen>
				<simpara>
					In addition, you can set any properties supported by Business Central by including the <literal>-D&lt;property&gt;=&lt;value&gt;</literal> parameter in this command, for example:
				</simpara>
				
<screen>java -jar rhpam-7.4.0-business-central-standalone.jar -s application-config.yaml -D&lt;property&gt;=&lt;value&gt; -D&lt;property&gt;=&lt;value&gt;</screen>
				<simpara>
					See <xref linkend="run-standalone-properties-con" /> for more information.
				</simpara>
			</listitem>
		</orderedlist>
		<section xml:id="run-standalone-properties-con">
			<title>Supported properties</title>
			<simpara>
				The Business Central system properties listed in this section are passed to <literal>standalone*.xml</literal> files or when you install standalone Business Central, you can use the properties listed in this section in the following command:
			</simpara>
			
<screen>java -jar rhpam-7.4.0-business-central-standalone.jar -s application-config.yaml -D&lt;property&gt;=&lt;value&gt; -D&lt;property&gt;=&lt;value&gt;</screen>
			<simpara>
				In this command, <literal>&lt;property&gt;</literal> is a property from the following list and <literal>&lt;value&gt;</literal> is a value that you assign to that property:
			</simpara>
			<itemizedlist>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.dir</literal>: Location of the Process Server Git directory.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.dirname</literal>: Name of the Process Server Git directory. Default value: <literal>.niogit</literal>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.proxy.ssh.over.http</literal>: Specifies whether SSH should use an HTTP proxy. Default: <literal>false</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>http.proxyHost</literal>: Defines the host name of the HTTP proxy. Default: <literal>null</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>http.proxyPort</literal>: Defines the host port (integer value) of the HTTP proxy. Default: <literal>null</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.proxy.ssh.over.https</literal>: Specifies whether SSH should use an HTTPS proxy. Default: <literal>false</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>https.proxyHost</literal>: Defines the host name of the HTTPS proxy. Default: <literal>null</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>https.proxyPort</literal>: Defines the host port (integer value) of the HTTPS proxy. Default: <literal>null</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.http.enabled</literal>: Enables or disables the HTTP daemon. Default: <literal>true</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.http.host</literal>: If the HTTP daemon is enabled, it uses this property as the host identifier. This is an informative property that is used to display how to access the Git repository over HTTP. The HTTP still relies on the servlet container. Default: <literal>localhost</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.http.hostname</literal>: If the HTTP daemon is enabled, it uses this property as the host name identifier. This is an informative property that is used to display how to access the Git repository over HTTP. The HTTP still relies on the servlet container. Default: <literal>localhost</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.http.port</literal>: If the HTTP daemon is enabled, it uses this property as the port number. This is an informative property that is used to display how to access the Git repository over HTTP. The HTTP still relies on the servlet container. Default: <literal>8080</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.https.enabled</literal>: Enables or disables the HTTPS daemon. Default: <literal>false</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.https.host</literal>: If the HTTPS daemon is enabled, it uses this property as the host identifier. This is an informative property that is used to display how to access the Git repository over HTTPS. The HTTPS still relies on the servlet container. Default: <literal>localhost</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.https.hostname</literal>: If the HTTPS daemon is enabled, it uses this property as the host name identifier. This is an informative property that is used to display how to access the Git repository over HTTPS. The HTTPS still relies on the servlet container. Default: <literal>localhost</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.https.port</literal>: If the HTTPS daemon is enabled, it uses this property as the port number. This is an informative property that is used to display how to access the Git repository over HTTPS. The HTTPS still relies on the servlet container. Default: <literal>8080</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.daemon.enabled</literal>: Enables or disables the Git daemon. Default value: <literal>true</literal>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.daemon.host</literal>: If the Git daemon is enabled, it uses this property as the local host identifier. Default value: <literal>localhost</literal>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.daemon.hostname</literal>: If the Git daemon is enabled, it uses this property as the local host name identifier. Default: <literal>localhost</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.daemon.port</literal>: If the Git daemon is enabled, it uses this property as the port number. Default value: <literal>9418</literal>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.http.sslVerify</literal>: Enables or disables SSL certificate checking for Git repositories. Default: <literal>true</literal>
					</simpara>
					<note>
						<simpara>
							If the default or assigned port is already in use, a new port is automatically selected. Ensure that the ports are available and check the log for more information.
						</simpara>
					</note>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.ssh.enabled</literal>: Enables or disables the SSH daemon. Default value: <literal>true</literal>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.ssh.host</literal>: If the SSH daemon enabled, it uses this property as the local host identifier. Default value: <literal>localhost</literal>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.ssh.hostname</literal>: If the SSH daemon is enabled, it uses this property as local host name identifier. Default: <literal>localhost</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.ssh.port</literal>: If the SSH daemon is enabled, it uses this property as the port number. Default value: <literal>8001</literal>.
					</simpara>
					<note>
						<simpara>
							If the default or assigned port is already in use, a new port is automatically selected. Ensure that the ports are available and check the log for more information.
						</simpara>
					</note>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.ssh.cert.dir</literal>: Location of the <literal>.security</literal> directory where local certificates are stored. Default: the working directory.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.ssh.passphrase</literal>: Pass phrase used to access the public key store of your operating system when cloning git repositories with SCP style URLs. Example: <literal>git@github.com:user/repository.git</literal>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.ssh.algorithm</literal>: Algorithm used by SSH. Default value: <literal>RSA</literal>.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.ssh.ciphers</literal>: A comma-separated string of ciphers. The available ciphers are <literal>aes128-ctr</literal>, <literal>aes192-ctr</literal>, <literal>aes256-ctr</literal>, <literal>arcfour128</literal>, <literal>arcfour256</literal>, <literal>aes192-cbc</literal>, <literal>aes256-cbc</literal>. If the property is not used, all available ciphers are loaded.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.nio.git.ssh.macs</literal>: A comma-separated string of message authentication codes (MACs). The available MACs are <literal>hmac-md5</literal>, <literal>hmac-md5-96</literal>, <literal>hmac-sha1</literal>, <literal>hmac-sha1-96</literal>, <literal>hmac-sha2-256</literal>, <literal>hmac-sha2-512</literal>. If the property is not used, all available MACs are loaded.
					</simpara>
					<note>
						<simpara>
							If you plan to use RSA or any algorithm other than DSA, make sure you set up your application server to use the Bouncy Castle JCE library.
						</simpara>
					</note>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.metadata.index.dir</literal>: Place where the Lucene <literal>.index</literal> directory is stored. Default: the working directory
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.ldap.regex.role_mapper</literal>: Regex pattern used to map LDAP principal names to the application role name. Note that the variable role must be part of the pattern because it is substituted by the application role name when matching a principal value to a role name. Default: Not used.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.sys.repo.monitor.disabled</literal>: Disables the configuration monitor. Do not disable unless you are sure. Default value: <literal>false</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.secure.key</literal>: Password used by password encryption. Default value: <literal>org.uberfire.admin</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.secure.alg</literal>: Crypto algorithm used by password encryption. Default value: <literal>PBEWithMD5AndDES</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.domain</literal>: Security-domain name used by uberfire. Default value: <literal>ApplicationRealm</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.guvnor.m2repo.dir</literal>: Place where the Maven repository folder is stored. Default value: <literal>&lt;working-directory&gt;/repositories/kie</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.guvnor.project.gav.check.disabled</literal>: Disables group ID, artifact ID, and version (GAV) checks. Default value: <literal>false</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.kie.build.disable-project-explorer</literal>: Disables automatic build of a selected project in Project Explorer. Default value: <literal>false</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.kie.verification.disable-dtable-realtime-verification</literal>: Disables the real-time validation and verification of decision tables. Default value: <literal>false</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.kie.server.controller</literal>: URL for connecting with a Process Automation Manager controller, for example: <literal>ws://localhost:8080/business-central/websocket/controller</literal>
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.kie.server.user</literal>: User name used to connect with the Process Server nodes from the Process Automation Manager controller. This property is only required when using this Business Central installation as a Process Automation Manager controller.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.kie.server.pwd</literal>: Password used to connect with the Process Server nodes from the Process Automation Manager controller. This property is only required when using this Business Central installation as a Process Automation Manager controller.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						<literal>kie.maven.offline.force</literal>: Forces Maven to behave as offline. If true, disable online dependency resolution. Default: <literal>false</literal>.
					</simpara>
					<note>
						<simpara>
							Use this property for Business Central only. If you share a runtime environment with any other component, isolate the configuration and apply it only to Business Central.
						</simpara>
					</note>
				</listitem>
				<listitem>
					<simpara>
						<literal>org.uberfire.gzip.enable</literal>: Enables or disables Gzip compression on GzipFilter. Default: <literal>true</literal>
					</simpara>
				</listitem>
			</itemizedlist>
		</section>
	</chapter>
	<chapter xml:id="maven-repo-using-con">
		<title>Setting Maven dependencies in your project</title>
		<simpara>
			You can use an external Maven repository to deploy a project. When you create a project, Business Central uses the Maven repositories that are configured for Business Central. You can use the Maven global or user settings to direct all Red Hat Process Automation Manager projects to retrieve dependencies from the public Red Hat Process Automation Manager repository by modifying the following files:
		</simpara>
		<itemizedlist>
			<listitem>
				<simpara>
					The Maven <literal>settings.xml</literal> file.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					The Maven project object model (POM) file (<literal>pom.xml</literal>).
				</simpara>
			</listitem>
		</itemizedlist>
		<simpara>
			For more information, see <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.4/html-single/packaging_and_deploying_a_red_hat_process_automation_manager_project"><emphasis>Packaging and deploying a Red Hat Process Automation Manager project</emphasis></link>.
		</simpara>
		<section xml:id="maven-pom-configuration-proc">
			<title>Configuring Maven using the project configuration file (<literal>pom.xml</literal>)</title>
			<simpara>
				To use Maven for building and managing your Red Hat Process Automation Manager projects, you must create and configure the POM file (<literal>pom.xml</literal>). This file holds configuration information for your project. For more information, see <link xlink:href="https://maven.apache.org/pom.html">Apache Maven Project</link>.
			</simpara>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						Generate a Maven project. A <literal>pom.xml</literal> file is automatically generated when you create a Maven project.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Edit the <literal>pom.xml</literal> file to add more dependencies and new repositories.
					</simpara>
					<simpara>
						Maven downloads all of the JAR files and the dependent JAR files from the Maven repository when you compile and package your project.
					</simpara>
				</listitem>
			</orderedlist>
			<simpara>
				Find the schema for the <literal>pom.xml</literal> file at <link xlink:href="http://maven.apache.org/maven-v4_0_0.xsd">http://maven.apache.org/maven-v4_0_0.xsd</link>. For more information about POM files, see <link xlink:href="http://maven.apache.org/pom.html">Apache Maven Project POM</link>.
			</simpara>
		</section>
		<section xml:id="maven-settings-configuration-ref">
			<title>Modify the Maven settings file</title>
			<simpara>
				Red Hat Process Automation Manager uses Maven <literal>settings.xml</literal> file to configure it’s Maven execution. You must create and activate a profile in the <literal>settings.xml</literal> file and declare the Maven repositories used by your Red Hat Process Automation Manager projects.
			</simpara>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						In the <literal>settings.xml</literal> file, declare the repositories that your Red Hat Process Automation Manager projects use. Usually, this is either the <link xlink:href="https://maven.repository.redhat.com/ga/">online Red Hat Process Automation Manager Maven repository</link> or the Red Hat Process Automation Manager Maven repository that you download from the Red Hat Customer Portal and any repositories for custom artifacts that you want to use.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						Ensure that Business Central or Process Server is configured to use the <literal>settings.xml</literal> file, for example by specifying the <literal>kie.maven.settings.custom=&lt;path_to_settings.xml&gt;</literal> property.
					</simpara>
				</listitem>
			</orderedlist>
			<simpara>
				For information about the Maven <literal>settings.xml</literal> file, see the Apache Maven Project <link xlink:href="https://maven.apache.org/settings.html">Setting Reference</link>.
			</simpara>
		</section>
		<section xml:id="maven-managing-dependencies-proc">
			<title>Modify the Maven POM file</title>
			<simpara>
				To use the correct Maven dependencies in your Red Hat Process Automation Manager project, add the Red Hat Business Automation bill of materials (BOM) files to the project’s <literal>pom.xml</literal> file. The Red Hat Business Automation BOM applies to both Red Hat Decision Manager and Red Hat Process Automation Manager. When you add the BOM files, the correct versions of transitive dependencies from the provided Maven repositories are included in the project.
			</simpara>
			<simpara>
				For more information about the Red Hat Business Automation BOM, see <link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link>.
			</simpara>
			<orderedlist numeration="arabic">
				<title>Procedure</title>
				<listitem>
					<simpara>
						Declare the Red Hat Business Automation BOM in the <literal>pom.xml</literal> file:
					</simpara>
					<informalexample>
<programlisting language="xml" linenumbering="unnumbered">&lt;dependencyManagement&gt;
 &lt;dependencies&gt;
  &lt;dependency&gt;
   &lt;groupId&gt;com.redhat.ba&lt;/groupId&gt;
   &lt;artifactId&gt;ba-platform-bom&lt;/artifactId&gt;
   &lt;version&gt;7.4.0.GA-redhat-00002&lt;/version&gt;
   &lt;type&gt;pom&lt;/type&gt;
   &lt;scope&gt;import&lt;/scope&gt;
  &lt;/dependency&gt;
 &lt;/dependencies&gt;
&lt;/dependencyManagement&gt;
&lt;dependencies&gt;
&lt;!-- Your dependencies --&gt;
&lt;/dependencies&gt;</programlisting>
					</informalexample>
				</listitem>
				<listitem>
					<simpara>
						Declare dependencies required for your project in the <literal>&lt;dependencies&gt;</literal> tag. After you import the product BOM into your project, the versions of the user-facing product dependencies are defined so you do not need to specify the <literal>&lt;version&gt;</literal> sub-element of these <literal>&lt;dependency&gt;</literal> elements. However, you must use the <literal>&lt;dependency&gt;</literal> element to declare dependencies which you want to use in your project.
					</simpara>
				</listitem>
				<listitem>
					<simpara>
						For standalone projects that are not authored in Business Central, specify all dependencies required for your projects. In projects that you author in Business Central, the basic decision engine and process engine dependencies are provided automatically by Business Central.
					</simpara>
					<itemizedlist>
						<listitem>
							<simpara>
								For a basic Red Hat Process Automation Manager project, declare the following dependencies, depending on the features that you want to use:
							</simpara>
							<formalpara remap="_embedded_jbpm_engine_dependencies" xml:id="embedded_jbpm_engine_dependencies">
								<title>Embedded process engine dependencies</title>
								<para>
									
<programlisting language="xml" linenumbering="unnumbered">&lt;!-- Public KIE API --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-api&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Core dependencies for process engine --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-flow&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;artifactId&gt;jbpm-flow-builder&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-bpmn2&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-runtime-manager&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-persistence-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-query-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-audit&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-kie-services&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency needed for default WorkItemHandler implementations. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-workitems-core&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Logging dependency. You can use any logging framework compatible with slf4j. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;
  &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;
  &lt;version&gt;${logback.version}&lt;/version&gt;
&lt;/dependency&gt;</programlisting>
								</para>
							</formalpara>
						</listitem>
						<listitem>
							<simpara>
								For a Red Hat Process Automation Manager project that uses CDI, you typically declare the following dependencies:
							</simpara>
							<formalpara remap="_cdi_enabled_jbpm_engine_dependencies" xml:id="cdi_enabled_jbpm_engine_dependencies">
								<title>CDI-enabled process engine dependencies</title>
								<para>
									
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-api&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-kie-services&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;org.jbpm&lt;/groupId&gt;
  &lt;artifactId&gt;jbpm-services-cdi&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
								</para>
							</formalpara>
						</listitem>
						<listitem>
							<simpara>
								For a basic Red Hat Process Automation Manager project, declare the following dependencies:
							</simpara>
							<formalpara remap="_embedded_drools_engine_dependencies" xml:id="embedded_drools_engine_dependencies">
								<title>Embedded decision engine dependencies</title>
								<para>
									
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-compiler&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency for persistence support. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-persistence-jpa&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependencies for decision tables, templates, and scorecards.
For other assets, declare org.drools:business-central-models-* dependencies. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-decisiontables&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-templates&lt;/artifactId&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.drools&lt;/groupId&gt;
  &lt;artifactId&gt;drools-scorecards&lt;/artifactId&gt;
&lt;/dependency&gt;

&lt;!-- Dependency for loading KJARs from a Maven repository using KieScanner. --&gt;
&lt;dependency&gt;
  &lt;groupId&gt;org.kie&lt;/groupId&gt;
  &lt;artifactId&gt;kie-ci&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
								</para>
							</formalpara>
						</listitem>
						<listitem>
							<simpara>
								To use the Process Server, declare the following dependencies:
							</simpara>
							<formalpara remap="_client_application_intelligent_process_server_dependencies" xml:id="client_application_intelligent_process_server_dependencies">
								<title>Client application Process Server dependencies</title>
								<para>
									
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.kie.server&lt;/groupId&gt;
  &lt;artifactId&gt;kie-server-client&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
								</para>
							</formalpara>
						</listitem>
						<listitem>
							<simpara>
								To create a remote client for Red Hat Process Automation Manager, declare the following dependency:
							</simpara>
							<formalpara>
								<title>Client dependency</title>
								<para>
									
<programlisting language="xml" linenumbering="unnumbered">&lt;dependency&gt;
  &lt;groupId&gt;org.uberfire&lt;/groupId&gt;
&lt;/dependency&gt;</programlisting>
								</para>
							</formalpara>
						</listitem>
						<listitem>
							<simpara>
								When creating a JAR file that includes assets, such as rules and process definitions, specify the packaging type for your Maven project as <literal>kjar</literal> and use <literal>org.kie:kie-maven-plugin</literal> to process the <literal>kjar</literal> packaging type located under the <literal>&lt;project&gt;</literal> element. In the following example, <literal>${kie.version}</literal> is the Maven library version listed in <link xlink:href="https://access.redhat.com/solutions/3405361">What is the mapping between Red Hat Process Automation Manager and the Maven library version?</link>:
							</simpara>
							
<programlisting language="xml" linenumbering="unnumbered">&lt;packaging&gt;kjar&lt;/packaging&gt;
&lt;build&gt;
 &lt;plugins&gt;
  &lt;plugin&gt;
   &lt;groupId&gt;org.kie&lt;/groupId&gt;
   &lt;artifactId&gt;kie-maven-plugin&lt;/artifactId&gt;
   &lt;version&gt;${kie.version}&lt;/version&gt;
   &lt;extensions&gt;true&lt;/extensions&gt;
  &lt;/plugin&gt;
 &lt;/plugins&gt;
&lt;/build&gt;</programlisting>
						</listitem>
					</itemizedlist>
				</listitem>
			</orderedlist>
		</section>
	</chapter>
	<chapter xml:id="git-import-proc">
		<title>Importing projects from Git repositories</title>
		<simpara>
			Git is a distributed version control system. It implements revisions as commit objects. When you save your changes to a repository, a new commit object in the Git repository is created.
		</simpara>
		<simpara>
			Business Central uses Git to store project data, including assets such as rules and processes. When you create a project in Business Central, it is added to a Git repository that is embedded in Business Central. If you have projects in other Git repositories, you can import those projects into the Business Central Git repository through Business Central spaces.
		</simpara>
		<itemizedlist>
			<title>Prerequisites</title>
			<listitem>
				<simpara>
					Red Hat Process Automation Manager projects exist in an external Git repository.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					You have the credentials required for read access to that external Git repository.
				</simpara>
			</listitem>
		</itemizedlist>
		<orderedlist numeration="arabic">
			<title>Procedure</title>
			<listitem>
				<simpara>
					In Business Central, click <emphasis role="strong">Menu</emphasis> → <emphasis role="strong">Design</emphasis> → <emphasis role="strong">Projects</emphasis>.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					Select or create the space into which you want to import the projects. The default space is <emphasis role="strong">mySpace</emphasis>.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					Click the three vertical dots on the right side of the screen and select <emphasis role="strong">Import Project</emphasis>.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
					In the <emphasis role="strong">Import Project</emphasis> window, enter the URL and credentials for the Git repository that contains the projects that you want to import and click <emphasis role="strong">Import</emphasis>. The projects are added to the Business Central Git repository and are available from the current space.
				</simpara>
			</listitem>
		</orderedlist>
	</chapter>
	<chapter xml:id="ldap-ssl-con">
		<title>Integrating LDAP and SSL</title>
		<simpara>
			With Red Hat Process Automation Manager you can integrate LDAP and SSL through RH-SSO. For more information, see the <link xlink:href="https://access.redhat.com/documentation/en-us/red_hat_single_sign-on/7.2/html-single/server_administration_guide/"><emphasis>Red Hat Single Sign-On Server Administration Guide</emphasis></link>.
		</simpara>
	</chapter>
	<appendix xml:id="versioning-information">
		<title>Versioning information</title>
		<simpara>
			Documentation last updated on Monday, April 15, 2019.
		</simpara>
	</appendix>
</book>

