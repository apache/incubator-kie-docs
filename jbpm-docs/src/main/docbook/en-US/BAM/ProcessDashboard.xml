<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xml:id="sect-bam-processdashboard"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">

  <title>Process Dashboard</title>

  <para>The jBPM Process Dashboard is an specific use case of a dashboard feed from data coming from a relational
    database via SQL queries. In this case, the database tables consumed are:
    <emphasis>processinstancelog</emphasis>
    and
    <emphasis>bamtasksummary</emphasis>
    both belonging to the jBPM engine.
  </para>

  <para>Every time the jBPM runtime updates the information stored into such tables the data becomes automatically
    available to the dashboard indicators. The following picture shows the main screen that users get when navigating
    to the Process &amp; Task Dashboard.
  </para>

  <figure>
    <title>Processes dashboard</title>
    <screenshot>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/BAM/ProcessesDashboard.png"/>
        </imageobject>
      </mediaobject>
    </screenshot>
  </figure>

  <note>Notice, those are generic metrics not tied to any specific business process. Nonetheless, it's worth
    to mention that it would be very easy for customers to modify, extend or adapt this generic dashboard for custom needs.
    A customer could take the jBPM Process Dashboard as the base template for building a custom dashboard which mixes data
    coming from the jBPM engine plus data coming from its own business domain.
  </note>

  <para>As you can see there exists two tabs in the top of the screen: Processes and Tasks. As their name indicates, every
    tab contains only indicators related to either processes or tasks.</para>

  <para>To filter through the data users can click on the charts in order to select, for instance, a given process,
    a given status, etc... Every time a filter is applied, all the indicators are automatically
    updated and synced according to the criteria set. The next picture shows, for instance, what happens when both the
    process <emphasis>Sales</emphasis> and the status <emphasis>Active</emphasis> are selected.</para>

  <figure>
    <title>Active Process Filter</title>
    <screenshot>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/BAM/ProcessesDashboardFilter.png"/>
        </imageobject>
      </mediaobject>
    </screenshot>
  </figure>

  <para>Using the built-in filter features is a good way to select the process instances the users want to look into.
    Additionally, at any time, no matter whether there is any active filter or not, users can also navigate to the actual
    list of instances the dashboard indicators are showing. The <emphasis>Show Instances</emphasis> link at the top right
    side on the screen can be used to display those instances. Once clicked, the view is switched to the screen shown in
    the next picture:</para>

  <figure>
    <title>Process Instance List</title>
    <screenshot>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/BAM/ProcessesDashboardInstanceList.png"/>
        </imageobject>
      </mediaobject>
    </screenshot>
  </figure>

  <para>From this view, users can sort the instances just by clicking on any column. They can get a detailed view
    of a particular instance just by clicking on the desired row as well. </para>

  <figure>
    <title>Process Instance Details</title>
    <screenshot>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/BAM/ProcessesDashboardInstanceDetails.png"/>
        </imageobject>
      </mediaobject>
    </screenshot>
  </figure>

  <para>The process instance details panel is shown on the right of the screen just after clicking on a row. Notice this is
    a read only view, just for monitoring purposes. After identifying a target process instance the next step is to
    use the <emphasis>jBPM Process Instance Console</emphasis> in case the user needs to manage such process instance.</para>

  <section>
    <title>Task Dashboard</title>

    <para>To switch from the process view to the task view just click on the <emphasis>Tasks</emphasis> tab
    at the top of the screen. </para>

    <figure>
      <title>Task Dashboard</title>
      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/BAM/ProcessesDashboardInstanceDetails.png"/>
          </imageobject>
        </mediaobject>
      </screenshot>
    </figure>

    <para>The task view only contains indicators related to tasks. It basically provides the same features
      introduced above for process instances (filters, show instances, get details), this time related to tasks instead
      of processes though.</para>

    <figure>
      <title>Task Instance List</title>
      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/BAM/ProcessesDashboardInstanceDetails.png"/>
          </imageobject>
        </mediaobject>
      </screenshot>
    </figure>
    <figure>
      <title>Task Instance Details</title>
      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/BAM/ProcessesDashboardInstanceDetails.png"/>
          </imageobject>
        </mediaobject>
      </screenshot>
    </figure>
  </section>

  <para>To sum up, the jBPM Process &amp; Task Dashboard let users:</para>

  <itemizedlist>
    <listitem>
      <para>To monitor their processes and tasks</para>
    </listitem>
    <listitem>
      <para>To apply the proper filters in order quickly identify problematic instances</para>
    </listitem>
    <listitem>
      <para>To get the required information about a given instance in order to be able to fix any unexpected issue</para>
    </listitem>
  </itemizedlist>

</section>
