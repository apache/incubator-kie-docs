<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd" xml:base="./../" xml:id="jBPMReleaseNotes640" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">
  <title>New and Noteworthy in jBPM 6.4.0</title>
  <para>The following features were added to jBPM 6.4</para>
  
  <section>
    <title>New jBPM Process &amp; Task Dashboard</title>
    <para>The jBPM Process Dashboard has been entirely rewritten in this version and now is based on
      a native workbench perspective instead of a separated web application. The main goal is to deliver
      a better user experience, thanks to a much more appealing as well as polished user interface.</para>

    <figure>
      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/BAM/ProcessesDashboard.png" format="PNG"/>
          </imageobject>
        </mediaobject>
      </screenshot>
    </figure>

    <para>This dashboard version also provides the ability to navigate from the graphical indicators to any of the
      related process or task instances. Now, end users can easily find out the instances that are related to a given
      indicator and deep into their details as well.</para>

    <figure>
      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/BAM/ProcessesDashboardInstanceDetails.png" format="PNG"/>
          </imageobject>
        </mediaobject>
      </screenshot>
    </figure>

    <para>The resulting dashboard is more fluent, more interactive and with a better integration with the jBPM runtime.</para>

  </section>
  <section>
    <title>Task variables auditing</title>
    <para>By default process variables are stored in audit tables (VariableInstanceLog) that allows
      simplified access to variable values without need to load individual process instances.
      Moreover that provides option to search by process variables and process variable values e.g.
      to find process instances that have given value for given variable.</para>
    <para>This was missing for task variables as task variables were not stored in any audit tables.
      This has been improved in version 6.4.0 and now task variables are stored in audit table
      (TaskVariableImpl) by default. It does follow the same mechanism as for process variables -
      variable.toString() is the value stored in table. With this services and query APIs have been
      enhanced to take advantage of this support and to search for tasks by their variables.</para>
  </section>
  <section>
    <title>Process and task variables indexation</title>
    <para>By default process and task variables are indexed with simplest possible mechanism - that
      is variable.toString() while for some object this can be sufficient, like simple types, for
      others it can cause significant problems when performing queries. To solve the problem process
      and task variables are equipped with pluggable indexation. This is realized by two interfaces
      that shall be implemented to provide custom indexation behavior.<itemizedlist>
        <listitem>
          <para>org.kie.internal.process.ProcessVariableIndexer</para>
        </listitem>
        <listitem>
          <para>org.kie.internal.task.api.TaskVariableIndexer</para>
        </listitem>
      </itemizedlist></para>
    <para>details about how to use the indexers can be found in  Audit log section of the
      documentation</para>
  </section>
  <section>
    <title>Ability to show bussiness data at task list.</title>
    <para>The user can now create a specific filter that provides domain specific columns to be added to a task list.
      When the user creates a custom filter for a specific task name the task variables are enabled as columns.
    </para>
    <para>The custom filter that activates the capability to display task variables as columns is set a filter with the restriction Name="taskName".</para>
    <figure>
      <title>Filter by task name creation</title>
      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/Console/task-filter_taskname.png"
                       format="PNG"/>
          </imageobject>
        </mediaobject>
      </screenshot>
    </figure>

    <para>
      When the filter with the restriction over a specific task name is applied, the task associated variables appear as a selectable columns, to the task list.
    </para>
    <figure>
      <title>task list with task name restriction applied</title>
      <screenshot>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/Console/task-var_as_columns.png"
                       format="PNG" maxwidth="700"/>
          </imageobject>
        </mediaobject>
      </screenshot>
    </figure>
  </section>

</section>
