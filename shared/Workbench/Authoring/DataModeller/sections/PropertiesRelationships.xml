<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xml:id="sect-datamodeler-propertyRelationships"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../../../../" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">

  <title>Properties &amp; relationships</title>

  <para>Once the data object has been created, it now has to be completed by
    adding user-defined properties to its definition. This can be achieved by
    pressing the "add field" button. The "New Field" dialog will be opened and the
    new field can be created by pressing the "Create" button. The "Create and continue" button
    will also add the new field to the Data Object, but won't close the dialog. In this way multiple fields
    can be created avoiding the popup opening multiple times.

    The following fields can (or must) be filled out:
  </para>

  <itemizedlist>
    <listitem>
      <para>The field's internal identifier (mandatory). The value of this
        field must be unique per data object, i.e. if the proposed identifier
        already exists within current data object, an error message will be
        displayed.
      </para>
    </listitem>

    <listitem>
      <para>A label (optional): as with the data object definition, the user can
        define a user-friendly label for the data object field which is
        about to be created. This has no further implications on how fields
        from objects of this data object will be treated. If a label is defined, then
        this is how the field will be displayed throughout the data modeller
        tool.
      </para>
    </listitem>

    <listitem>
      <para>A field type (mandatory): each data object field needs to be
        assigned with a type.
      </para>

      <para>This type can be either of the following:</para>

      <para/>

      <orderedlist>
        <listitem>
          <para>A 'primitive java object' type: these include most of the object
            equivalents of the standard Java primitive types, such as Boolean,
            Short, Float, etc, as well as String, Date, BigDecimal and
            BigInteger.
          </para>

          <figure>
            <title>Primitive object field types</title>

            <screenshot>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/Workbench/Authoring/DataModeller/6.3/create-field-with-primitive-type.png"/>
                </imageobject>
              </mediaobject>
            </screenshot>
          </figure>

          <para/>

          <para/>
        </listitem>

        <listitem>
          <para>A 'data object' type: any user defined data object automatically
            becomes a candidate to be defined as a field type of another
            data object, thus enabling the creation of relationships between
            them. A data object field can be created either in 'single'
            or in 'multiple' form, the latter implying that the field will
            be defined as a collection of this type, which will be indicated by
            selecting "List" checkbox.
          </para>

          <figure>
            <title>Data object field types</title>

            <screenshot>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/Workbench/Authoring/DataModeller/types_entity.jpg"/>
                </imageobject>
              </mediaobject>
            </screenshot>
          </figure>

          <para/>

          <para/>
        </listitem>

        <listitem>
          <para>A 'primitive java' type: these include java primitive types byte, short, int, long, float, double, char
            and boolean.
          </para>

          <figure>
            <title>Primitive field types</title>

            <screenshot>
              <mediaobject>
                <imageobject>
                  <imagedata fileref="images/Workbench/Authoring/DataModeller/types_primitive.jpg"/>
                </imageobject>
              </mediaobject>
            </screenshot>
          </figure>

          <para/>

          <para/>
        </listitem>

      </orderedlist>
    </listitem>
  </itemizedlist>

  <para>When finished introducing the initial information for a new field,
    clicking the 'Create' button will add the newly created field to the end
    of the data object's fields table below:
  </para>

  <figure>
    <title>New field has been created</title>

    <screenshot>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/Workbench/Authoring/DataModeller/6.3/new-field-was-created.png"/>
        </imageobject>
      </mediaobject>
    </screenshot>
  </figure>

  <para/>

  <para>The new field will also automatically be selected in the data object's
    field list, and its properties will be shown in the Field general properties editor.
    Additionally the field properties will be loaded in the different tool windows, in this way
    the field will be ready for edition in whatever selected tool window.
  </para>

  <para>At any time, any field (without restrictions) can be deleted from
    a data object definition by clicking on the corresponding 'x' icon in the
    data object's fields table.
  </para>

  <para/>
</section>
