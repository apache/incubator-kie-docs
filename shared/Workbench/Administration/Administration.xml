<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
  xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
  xml:base="../../" xml:id="wb.Administration" xmlns="http://docbook.org/ns/docbook"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:ns="http://docbook.org/ns/docbook">
  <title>Administration</title>

  <section xml:id="wb.administrationOverview">
    <title>Administration overview</title>

    <para>A workbench is structured with Organization Units, VFS repositories and projects:</para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="images/Workbench/Administration/workbenchStructureOverview.png"/>
      </imageobject>
    </mediaobject>
  </section>

  <section xml:id="wb.OrganizationalUnit">
    <title>Organizational unit</title>

    <para>Organization units are useful to model departments and divisions.</para>

    <para>An organization unit can hold multiple repositories.</para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="images/Workbench/Administration/organizationalUnitManager.png"/>
      </imageobject>
    </mediaobject>
  </section>

  <section xml:id="wb.VFSRepository">
    <title>Repositories</title>

    <para>Repositories are the place where assets are stored and each repository is organized by projects and belongs to
      a single organization unit. </para>

    <para>Repositories are in fact a Virtual File System based storage, that by default uses GIT as backend. Such setup
      allows workbench to work with multiple backends and, in the same time, take full advantage of backend specifics
      features like in GIT case versioning, branching and even external access.</para>

    <mediaobject>
      <imageobject>
        <imagedata fileref="images/Workbench/Administration/repositoriesEditor.png"/>
      </imageobject>
    </mediaobject>

    <para>A new repository can be created from scratch or cloned from an existing repository.</para>

    <para>One of the biggest advantages of using GIT as backend is the ability to clone a repository from external and
      use your preferred tools to edit and build your assets.</para>


    <warning>
      <para><emphasis role="bold">Never</emphasis> clone your repositories directly from <link
          linkend="wb.systemProperties">.niogit</link> directory. Use always the available protocol(s) displayed in
        repositories editor.</para>
    </warning>


    <section xml:id="wb.VFSRepositoryEditor">
      <title>Repository Editor</title>

      <para>One additional advantage to use GIT as backend is the possibility to revert your repository to a previous
        state. You can do it directly from the repository editor by browsing its commit history and clicking the
          <emphasis role="bold">Revert</emphasis> button.</para>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/Workbench/Administration/repositoryEditor.png"/>
        </imageobject>
      </mediaobject>

    </section>

  </section>
</section>
