<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xml:base="../../" xml:id="wb.Configuration"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">

  <title>Configuration</title>

       <section xml:id="wb.UserManagement">
              <title>Basic user management</title>
              
              <para>The workbench authenticates its users against the application server's authentication and authorization
                     (JAAS).</para>
              
              <para>On JBoss EAP and WildFly, add a user with the script <literal>$JBOSS_HOME/bin/add-user.sh</literal> (or
                     <literal>.bat</literal>):</para>
              
              <programlisting>$ ./add-user.sh
// Type: Application User
// Realm: empty (defaults to ApplicationRealm)
// Role: admin</programlisting>
              
              <para>There is no need to restart the application server.</para>
       </section>
       
       <section xml:id="wb.Roles">
              <title>Roles</title>
              
              <para>The Workbench uses the following roles:</para>
              
              <itemizedlist>
                     <listitem>
                            <para>admin</para>
                     </listitem>
                     
                     <listitem>
                            <para>analyst</para>
                     </listitem>
                     
                     <listitem>
                            <para>developer</para>
                     </listitem>
                     
                     <listitem>
                            <para>manager</para>
                     </listitem>
                     
                     <listitem>
                            <para>user</para>
                     </listitem>
              </itemizedlist>
         <section>
           <title>Admin</title>
           <para>Administrates the BPMS system.<itemizedlist>
          <listitem>
            <para>Manages users</para>
          </listitem>
          <listitem>
            <para>Manages VFS Repositories</para>
          </listitem>
          <listitem>
            <para>Has full access to make any changes necessary</para>
          </listitem>
        </itemizedlist></para>
         </section>
         <section>
           <title>Developer</title>
           <para>Developer can do almost everything admin can do, except clone repositories.<itemizedlist>
          <listitem>
            <para>Manages rules, models, process flows, forms and dashboards</para>
          </listitem>
          <listitem>
            <para>Manages the asset repository</para>
          </listitem>
          <listitem>
            <para>Can create, build and deploy projects</para>
          </listitem>
          <listitem>
            <para>Can use the JBDS connection to view processes</para>
          </listitem>
        </itemizedlist></para>
         </section>
         <section>
           <title>Analyst</title>
           <para>Analyst is a weaker version of developer and does not have access to the asset repository or the
        ability to deploy projects.</para>
         </section>
         <section>
           <title>Business user</title>
           <para>Daily user of the system to take actions on business tasks that are required for the processes to
        continue forward. Works primarily with the task lists.<itemizedlist>
          <listitem>
            <para>Does process management</para>
          </listitem>
          <listitem>
            <para>Handles tasks and dashboards</para>
          </listitem>
        </itemizedlist></para>
         </section>
         <section>
           <title>Manager/Viewer-only User</title>
           <para>Viewer of the system that is interested in statistics around the business processes and their
        performance, business indicators, and other reporting of the system and people who interact with the system.<itemizedlist>
          <listitem>
            <para>Only has access to dashboards</para>
          </listitem>
        </itemizedlist></para>
         </section>
       </section>
  
  <section xml:id="wb.RestrictedAccess">
    <title>Restricting access to repositories </title>
    <para>It is possible to restrict access to repositories using roles and organizational groups. To let an user access
      a repository. </para>
    <para>The user either has to belong into a role that has access to the repository or to a role that belongs into an
      organizational group that has access to the repository. These restrictions can be managed with the command line
      config tool.</para>
  </section>
  
  <section xml:id="wb.CommandLineConfig">
  <title>Command line config tool</title>
    <para>Provides capabilities to manage the system repository from command line. System repository contains the data
      about general workbench settings: how editors behave, organizational groups, security and other settings that are
      not editable by the user. System repository exists in the .niogit folder, next to all the repositories that have
      been created or cloned into the workbench.</para>
    <section>
      <title>Config Tool Modes</title>
      <itemizedlist>
        <listitem>
          <para>Online (default and recommended) - Connects to the Git repository on startup, using Git server provided
            by the KIE Workbench. All changes are made locally and published to upstream when:</para>
          <itemizedlist>
            <listitem>
              <para>"push-changes" command is explicitly executed</para>
            </listitem>
            <listitem>
              <para>"exit" is used to close the tool</para>
            </listitem>
          </itemizedlist>
          </listitem>
        <listitem>
          <para>Offline - Creates and manipulates system repository directly on the server (no discard option)</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Available Commands</title>
      <table frame="all">
        <title>Available Commands</title>
        <tgroup cols='2' align='left' colsep='1' rowsep='1'>
        <tbody>
        <row>
          <entry>exit</entry>
          <entry>Publishes local changes, cleans up temporary directories and quits the command line tool</entry>
        </row>
          <row>
            <entry>discard</entry>
            <entry>Discards local changes without publishing them, cleans up temporary directories and quits the command
                line tool</entry>
          </row>
          <row>
            <entry>help</entry>
            <entry>Prints a list of available commands</entry>
          </row>
          <row>
            <entry>list-repo</entry>
            <entry>List available repositories</entry>
          </row>
          <row>
            <entry>list-org-units</entry>
            <entry>List available organizational units</entry>
          </row>
          <row>
            <entry>list-deployment</entry>
            <entry>List available deployments</entry>
          </row>
          <row>
            <entry>create-org-unit</entry>
            <entry>Creates new organizational unit</entry>
          </row>
          <row>
            <entry>remove-org-unit</entry>
            <entry>Removes existing organizational unit</entry>
          </row>
          <row>
            <entry>add-deployment</entry>
            <entry>Adds new deployment unit</entry>
          </row>
          <row>
            <entry>remove-deployment</entry>
            <entry>Removes existing deployment</entry>
          </row>
          <row>
            <entry>create-repo</entry>
            <entry>Creates new git repository</entry>
          </row>
          <row>
            <entry>remove-repo</entry>
            <entry>Removes existing repository ( only from config )</entry>
          </row>
          <row>
            <entry>add-repo-org-unit</entry>
            <entry>Adds repository to the organizational unit</entry>
          </row>
          <row>
            <entry>remove-repo-org-unit</entry>
            <entry>Removes repository from the organizational unit</entry>
          </row>
          <row>
            <entry>add-role-repo</entry>
            <entry>Adds role(s) to repository</entry>
          </row>
          <row>
            <entry>remove-role-repo</entry>
            <entry>Removes role(s) from repository</entry>
          </row>
          <row>
            <entry>add-role-org-unit</entry>
            <entry>Adds role(s) to organizational unit</entry>
          </row>
          <row>
            <entry>remove-role-org-unit</entry>
            <entry>Removes role(s) from organizational unit</entry>
          </row>
          <row>
            <entry>add-role-project</entry>
            <entry>Adds role(s) to project</entry>
          </row>
          <row>
            <entry>remove-role-project</entry>
            <entry>Removes role(s) from project</entry>
          </row>
          <row>
            <entry>push-changes</entry>
            <entry>Pushes changes to upstream repository (only in online mode)</entry>
          </row>
        </tbody>
        </tgroup>
      </table>
    </section>
    <section>
      <title>How to use</title>
      <para>The tool can be found from kie-config-cli-${version}-dist.zip. Execute the kie-config-cli.sh script and by
        default it will start in online mode asking for a Git url to connect to ( the default value is
        ssh://localhost/system ). To connect to a remote server, replace the host and port with appropriate values, e.g.
        ssh://kie-wb-host/system.</para>
      <programlisting>./kie-config-cli.sh </programlisting>
      <para>To operate in offline mode, append the offline parameter to the kie-config-cli.sh command. This will change
        the behaviour and ask for a folder where the .niogit (system repository) is. If .niogit does not yet exist, the
        folder value can be left empty and a brand new setup is created. </para>
    <programlisting>./kie-config-cli.sh offline</programlisting>
    </section>
  </section>
</section>
