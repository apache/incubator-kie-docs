<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../../" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Controller REST API</title>

  <para>When you have Managed Kie Server setup, you need to manage Kie Servers and Containers via a Controller.
        Generally, it's done by workbench UI but you may also use Controller REST API. </para>
       <para>
              <itemizedlist>
                     <listitem>
                            <para>The controller base URL is provided by kie-wb war deployment, which
                                  would be the same as org.kie.server.controller property.
                                   (for example:
                                          <code>http://localhost:8080/kie-wb/rest/controller</code>
                                   )</para>
                     </listitem>
                     <listitem>
                            <para>All requests require basic HTTP Authentication for the role
                                   kie-server as indicated earlier.</para>
                     </listitem>
              </itemizedlist>
       </para>
       <section>
              <title>[GET] /admin/servers</title>
              <para>Returns a list of Kie Server instances</para>
              <example><title>Example Server Response</title>
                     <programlisting language="XML"><![CDATA[<kie-server-instance-list>
  <kie-server-instance>
    <server-id>local-server-123</server-id>
    <server-setup>
      <server-containers>
        <containers container-id="MyContainer" status="STARTED">
          <release-id>
            <artifact-id>project1</artifact-id>
            <group-id>com.sample</group-id>
            <version>1.0.0</version>
          </release-id>
        </containers>
      </server-containers>
    </server-setup>
    <server-managed-instances>
      <managedInstances>
        <location>http://localhost:8080/kie-server/services/rest/server</location>
        <status>UP</status>
        <capabilities>
          <capabilities>KieServer</capabilities>
          <capabilities>BRM</capabilities>
          <capabilities>BPM</capabilities>
        </capabilities>
      </managedInstances>
    </server-managed-instances>
    <server-name>local-server-123</server-name>
    <server-status>UP</server-status>
    <server-version>6.3.0.Final</server-version>
  </kie-server-instance>
</kie-server-instance-list>]]></programlisting>
              </example>
       </section>

       <section>
              <title>[GET] /admin/server/{id}</title>
              <para>Returns a Kie Server instance</para>
              <example><title>Example Server Response</title>
                     <programlisting language="XML"><![CDATA[<kie-server-instance>
  <server-id>local-server-123</server-id>
  <server-setup>
    <server-containers>
      <containers container-id="MyContainer" status="STARTED">
        <release-id>
          <artifact-id>project1</artifact-id>
          <group-id>com.sample</group-id>
          <version>1.0.0</version>
        </release-id>
      </containers>
    </server-containers>
  </server-setup>
  <server-managed-instances>
    <managedInstances>
      <location>http://localhost:8080/kie-server/services/rest/server</location>
      <status>UP</status>
      <capabilities>
        <capabilities>KieServer</capabilities>
        <capabilities>BRM</capabilities>
        <capabilities>BPM</capabilities>
      </capabilities>
    </managedInstances>
  </server-managed-instances>
  <server-name>local-server-123</server-name>
  <server-status>UP</server-status>
  <server-version>6.3.0.Final</server-version>
</kie-server-instance>]]></programlisting>
              </example>
       </section>

       <section>
              <title>[PUT] /admin/server/{id}</title>
              <para>Creates a new Kie Server instance with the specified id</para>
              <example><title>Example Request to create a new Kie Server instance</title>
                     <programlisting language="XML"><![CDATA[<kie-server-info>
  <capabilities>KieServer</capabilities>
  <capabilities>BRM</capabilities>
  <location>http://localhost:8080/kie-server/services/rest/server</location>
  <name>local-server-456</name>
  <id>local-server-456</id>
  <version>6.3.0.Final</version>
</kie-server-info>]]></programlisting>
              </example>
       </section>

       <section>
              <title>[DELETE] /admin/server/{id}</title>
              <para>Deletes a Kie Server instance with the specified id</para>
       </section>

       <section>
              <title>[GET] /admin/server/{id}/containers/{containerId}</title>
              <para>Returns the Container information including its release id</para>
              <example><title>Example Server Response</title>
                     <programlisting language="XML"><![CDATA[<kie-container container-id="MyContainer" status="STARTED">
  <release-id>
    <artifact-id>project1</artifact-id>
    <group-id>com.sample</group-id>
    <version>1.0.0</version>
  </release-id>
</kie-container>]]></programlisting>
              </example>
       </section>

       <section>
              <title>[PUT] /admin/server/{id}/containers/{containerId}</title>
              <para>Creates a new Container with the specified containerId and the given release id</para>
              <example><title>Example Server Request</title>
                     <programlisting language="XML"><![CDATA[<kie-container container-id="MyContainer">
  <release-id>
    <artifact-id>project1</artifact-id>
    <group-id>com.sample</group-id>
    <version>1.0.0</version>
  </release-id>
</kie-container>]]></programlisting>
              </example>
       </section>

       <section>
              <title>[DELETE] /admin/server/{id}/containers/{containerId}</title>
              <para>Disposes a Container with the specified containerId</para>
       </section>

       <section>
              <title>[POST] /admin/server/{id}/containers/{containerId}/status/started</title>
              <para>Starts the Container. No request body required</para>
       </section>

       <section>
              <title>[POST] /admin/server/{id}/containers/{containerId}/status/stopped</title>
              <para>Stops the Container. No request body required</para>
       </section>

</section>
