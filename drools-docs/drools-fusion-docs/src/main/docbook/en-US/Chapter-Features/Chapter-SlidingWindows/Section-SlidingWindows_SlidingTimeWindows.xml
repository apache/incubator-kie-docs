<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../../" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Sliding Time Windows</title>

  <para>Sliding Time Windows allow the user to write rules that will only
  match events occurring in the last X time units.</para>

  <para>For instance, if the user wants to consider only the Stock Ticks that
  happened in the last 2 minutes, the pattern would look like this:</para>

  <programlisting>StockTick() over window:time( 2m )</programlisting>

  <para>Drools uses the "over" keyword to associate windows to
  patterns.</para>

  <para>On a more elaborate example, if the user wants to sound an alarm in
  case the average temperature over the last 10 minutes read from a sensor is
  above the threshold value, the rule would look like:</para>

  <example>
    <title>aggregating values over time windows</title>

    <programlisting>rule "Sound the alarm in case temperature rises above threshold"
when
    TemperatureThreshold( $max : max )
    Number( doubleValue &gt; $max ) from accumulate(
        SensorReading( $temp : temperature ) over window:time( 10m ),
        average( $temp ) )
then
    // sound the alarm
end
</programlisting>
  </example>

  <para>The engine will automatically disregard any SensorReading older than
  10 minutes and keep the calculated average consistent.</para>

  <important>
    <para>Please note that time based windows are considered when calculating
    the interval an event remains in the working memory before being expired,
    but an event falling off a sliding window does not mean by itself that the
    event will be discarded from the working memory, as there might be other
    rules that depend on that event. The engine will discard events only when
    no other rules depend on that event and the expiration policy for that
    event type is fulfilled. </para>
  </important>
</section>
