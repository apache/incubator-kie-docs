<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="./" xmlns="http://docbook.org/ns/docbook"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:ns="http://docbook.org/ns/docbook">
  <title>Sliding Windows</title>

  <para>Sliding Windows are a way to scope the events of interest by defining
  a window that is constantly moving. The two most common types of sliding
  window implementations are time based windows and length based
  windows.</para>

  <para>The next sections will detail each of them.</para>

  <important>
    <para>Sliding Windows are only available when running the engine in STREAM
    mode. Check the Event Processing Mode section for details on how the
    STREAM mode works.</para>
  </important>

  <important>
    <para>Sliding windows start to match immediately and defining a sliding
    window does not imply that the rule has to wait for the sliding window to
    be "full" in order to match. For instance, a rule that calculates the
    average of an event property on a window:length(10) will start calculating
    the average immediately, and it will start at 0 (zero) for no-events, and
    will update the average as events arrive one by one.</para>
  </important>

  <xi:include href="Section-SlidingWindows_SlidingTimeWindows.xml"/>

  <xi:include href="Section-SlidingWindows_SlidingLengthWindows.xml"/>
</section>
