<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">
  <title>Drools Fusion</title>

  <para>Event Processing use cases, in general, share several requirements and
  goals with Business Rules use cases. These overlaps happen both on the
  business side and on the technical side.</para>

  <para>On the Business side:</para>

  <itemizedlist>
    <listitem>
      <para>Business rules are frequently defined based on the occurrence of
      scenarios triggered by events. Examples could be:</para>

      <itemizedlist>
        <listitem>
          <para>On an algorithmic trading application: take an action if the
          security price increases X% compared to the day opening price, where
          the price increases are usually denoted by events on a Stock Trade
          application.</para>
        </listitem>

        <listitem>
          <para>On a monitoring application: take an action if the temperature
          on the server room increases X degrees in Y minutes, where sensor
          readings are usually denoted by events.</para>
        </listitem>
      </itemizedlist>
    </listitem>

    <listitem>
      <para>Both business rules and event processing queries change frequently
      and require immediate response for the business to adapt itself to new
      market conditions, new regulations and new enterprise policies.</para>
    </listitem>
  </itemizedlist>

  <para>From a technical perspective:</para>

  <itemizedlist>
    <listitem>
      <para>Both require seamless integration with the enterprise
      infrastructure and applications, specially on autonomous governance,
      including, but not limited to, lifecycle management, auditing, security,
      etc.</para>
    </listitem>

    <listitem>
      <para>Both have functional requirements like pattern matching and
      non-functional requirements like response time and query/rule
      explanation.</para>
    </listitem>
  </itemizedlist>

  <para>Even sharing requirements and goals, historically, both fields were
  born appart and although the industry evolved and one can find good products
  on the market, they either focus on event processing or on business rules
  management. That is due not only because of historical reasons but also
  because, even overlapping in part, use cases do have some different
  requirements.</para>

  <important>
    <para>Drools was also born as a rules engine several years ago, but
    following the vision of becoming a single platform for behavioral
    modelling, it soon realized that it could only achieve this goal by
    crediting the same importance to the three complementary business
    modelling techniques:</para>

    <itemizedlist>
      <listitem>
        <para>Business Rules Management</para>
      </listitem>

      <listitem>
        <para>Business Processes Management</para>
      </listitem>

      <listitem>
        <para>Complex Event Processing</para>
      </listitem>
    </itemizedlist>
  </important>

  <para>In this context, Drools Fusion is the module responsible for adding
  event processing capabilities into the platform. </para>

  <para>Supporting Complex Event Processing, though, is much more than simply
  understanding what an event is. CEP scenarios share several common and
  distinguishing characteristics:</para>

  <itemizedlist>
    <listitem>
      <para>Usually required to process huge volumes of events, but only a
      small percentage of the events are of real interest.</para>
    </listitem>

    <listitem>
      <para>Events are usually immutable, since they are a record of state
      change.</para>
    </listitem>

    <listitem>
      <para>Usually the rules and queries on events must run in reactive
      modes, i.e., react to the detection of event patterns.</para>
    </listitem>

    <listitem>
      <para>Usually there are strong temporal relationships between related
      events.</para>
    </listitem>

    <listitem>
      <para>Individual events are usually not important. The system is
      concerned about patterns of related events and their
      relationships.</para>
    </listitem>

    <listitem>
      <para>Usually, the system is required to perform composition and
      aggregation of events.</para>
    </listitem>
  </itemizedlist>

  <para>Based on this general common characteristics, Drools Fusion defined a
  set of goals to be achieved in order to support Complex Event Processing
  appropriately:</para>

  <itemizedlist>
    <listitem>
      <para>Support Events, with their proper semantics, as first class
      citizens.</para>
    </listitem>

    <listitem>
      <para>Allow detection, correlation, aggregation and composition of
      events.</para>
    </listitem>

    <listitem>
      <para>Support processing of Streams of events.</para>
    </listitem>

    <listitem>
      <para>Support temporal constraints in order to model the temporal
      relationships between events.</para>
    </listitem>

    <listitem>
      <para>Support sliding windows of interesting events.</para>
    </listitem>

    <listitem>
      <para>Support a session scoped unified clock.</para>
    </listitem>

    <listitem>
      <para>Support the required volumes of events for CEP use cases.</para>
    </listitem>

    <listitem>
      <para>Support to (re)active rules.</para>
    </listitem>

    <listitem>
      <para>Support adapters for event input into the engine
      (pipeline).</para>
    </listitem>
  </itemizedlist>

  <para>The above list of goals are based on the requirements not covered by
  Drools Expert itself, since in a unified platform, all features of one
  module are leveraged by the other modules. This way, Drools Fusion is born
  with enterprise grade features like Pattern Matching, that is paramount to a
  CEP product, but that is already provided by Drools Expert. In the same way,
  all features provided by Drools Fusion are leveraged by Drools Flow (and
  vice-versa) making process management aware of event processing and
  vice-versa.</para>

  <para>For the remaining of this guide, we will go through each of the
  features Drools Fusion adds to the platform. All these features are
  available to support different use cases in the CEP world, and the user is
  free to select and use the ones that will help him model his business use
  case.</para>
</section>
