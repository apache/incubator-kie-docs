<?xml version="1.0" encoding="UTF-8"?>
<section version="5.0" xml:base="../../" xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xmlns:db="http://docbook.org/ns/docbook">
    <note>
      <para>
        <replaceable>(updated to Drools 5.0)</replaceable>
      </para>
    </note>

    <title>Keywords</title>

    <para>Drools 5 introduces the concept of <emphasis>hard</emphasis> and
    <emphasis>soft</emphasis> keywords.</para>

    <para>Hard keywords are reserved, you cannot use any hard keyword when
    naming your domain objects, properties, methods, functions and other
    elements that are used in the rule text.</para>

    <para>Here is the list of hard keywords that must be avoided as identifiers
    when writing rules:</para>

    <itemizedlist>
      <listitem>
        <para><kw>true</kw></para>
      </listitem>

      <listitem>
        <para><kw>false</kw></para>
      </listitem>

      <listitem>
        <para><kw>accumulate</kw></para>
      </listitem>

      <listitem>
        <para><kw>collect</kw></para>
      </listitem>

      <listitem>
        <para><kw>from</kw></para>
      </listitem>

      <listitem>
        <para><kw>null</kw></para>
      </listitem>

      <listitem>
        <para><kw>over</kw></para>
      </listitem>

      <listitem>
        <para><kw>then</kw></para>
      </listitem>

      <listitem>
        <para><kw>when</kw></para>
      </listitem>
    </itemizedlist>

    <para>Soft keywords are just recognized in their context, enabling you to
    use these words in any other place you wish. Here is a list of the soft
    keywords:</para>

    <itemizedlist>
      <listitem>
        <para><kw>lock-on-active</kw></para>
      </listitem>

      <listitem>
        <para><kw>date-effective</kw></para>
      </listitem>

      <listitem>
        <para><kw>date-expires</kw></para>
      </listitem>

      <listitem>
        <para><kw>no-loop</kw></para>
      </listitem>

      <listitem>
        <para><kw>auto-focus</kw></para>
      </listitem>

      <listitem>
        <para><kw>activation-group</kw></para>
      </listitem>

      <listitem>
        <para><kw>agenda-group</kw></para>
      </listitem>

      <listitem>
        <para><kw>ruleflow-group</kw></para>
      </listitem>

      <listitem>
        <para><kw>entry-point</kw></para>
      </listitem>

      <listitem>
        <para><kw>duration</kw></para>
      </listitem>

      <listitem>
        <para><kw>package</kw></para>
      </listitem>

      <listitem>
        <para><kw>import</kw></para>
      </listitem>

      <listitem>
        <para><kw>dialect</kw></para>
      </listitem>

      <listitem>
        <para><kw>salience</kw></para>
      </listitem>

      <listitem>
        <para><kw>enabled</kw></para>
      </listitem>

      <listitem>
        <para><kw>attributes</kw></para>
      </listitem>

      <listitem>
        <para><kw>rule</kw></para>
      </listitem>

      <listitem>
        <para><kw>extend</kw></para>
      </listitem>

      <listitem>
        <para><kw>template</kw></para>
      </listitem>

      <listitem>
        <para><kw>query</kw></para>
      </listitem>

      <listitem>
        <para><kw>declare</kw></para>
      </listitem>

      <listitem>
        <para><kw>function</kw></para>
      </listitem>

      <listitem>
        <para><kw>global</kw></para>
      </listitem>

      <listitem>
        <para><kw>eval</kw></para>
      </listitem>

      <listitem>
        <para><kw>not</kw></para>
      </listitem>

      <listitem>
        <para><kw>in</kw></para>
      </listitem>

      <listitem>
        <para><kw>or</kw></para>
      </listitem>

      <listitem>
        <para><kw>and</kw></para>
      </listitem>

      <listitem>
        <para><kw>exists</kw></para>
      </listitem>

      <listitem>
        <para><kw>forall</kw></para>
      </listitem>

      <listitem>
        <para><kw>action</kw></para>
      </listitem>

      <listitem>
        <para><kw>reverse</kw></para>
      </listitem>

      <listitem>
        <para><kw>result</kw></para>
      </listitem>

      <listitem>
        <para><kw>end</kw></para>
      </listitem>

      <listitem>
        <para><kw>init</kw></para>
      </listitem>
    </itemizedlist>

    <para>Of course, you can have these (hard and soft) words as part of a
    method name in camel case, like notSomething() or accumulateSomething() -
    there are no issues with that scenario.</para>

    <para>Another improvement of the DRL language is the ability to escape hard
    keywords on rule text. This feature enables you to use your existing
    domain objects without worrying about keyword collision. To escape a word,
    simply enclose it in grave accents, like this:</para>

    <programlisting>Holiday( `when` == "july" )</programlisting>

    <para>The escape should be used everywehere in rule text, except within code
    expressions in the LHS or RHS code block. Here are examples of proper
    usage:</para>

    <programlisting>rule "validate holiday by eval" 
dialect "mvel"
when
    h1 : Holiday( )
    eval( h1.when == "july" )
then
    System.out.println(h1.name + ":" + h1.when);
end
</programlisting>

    <programlisting>rule "validate holiday" 
dialect "mvel"
when
    h1 : Holiday( `when` == "july" )
then
    System.out.println(h1.name + ":" + h1.when);
end
</programlisting>
</section>
